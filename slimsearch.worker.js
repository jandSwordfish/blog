/**
* @vue/shared v3.5.22
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function xt(e){const t=Object.create(null);for(const n of e.split(","))t[n]=1;return n=>n in t}const Ot={},St=()=>{},Ce=Object.assign,It=Object.prototype.hasOwnProperty,se=(e,t)=>It.call(e,t),z=Array.isArray,Y=e=>Ve(e)==="[object Map]",oe=e=>typeof e=="function",ke=e=>typeof e=="string",L=e=>typeof e=="symbol",W=e=>e!==null&&typeof e=="object",Nt=Object.prototype.toString,Ve=e=>Nt.call(e),$e=e=>Ve(e).slice(8,-1),ie=e=>ke(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,Mt=e=>{const t=Object.create(null);return(n=>t[n]||(t[n]=e(n)))},Ln=Mt(e=>e.charAt(0).toUpperCase()+e.slice(1)),H=(e,t)=>!Object.is(e,t);let je;const ce=()=>je||(je=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});/**
* @vue/reactivity v3.5.22
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Rt(e,...t){console.warn(`[Vue warn] ${e}`,...t)}let Tt,De=0,ae;function ue(){De++}function le(){if(--De>0)return;let e;for(;ae;){let t=ae;for(ae=void 0;t;){const n=t.next;if(t.next=void 0,t.flags&=-9,t.flags&1)try{t.trigger()}catch(s){e||(e=s)}t=n}}if(e)throw e}let G=!0;const Fe=[];function fe(){Fe.push(G),G=!1}function de(){const e=Fe.pop();G=e===void 0?!0:e}class Pe{constructor(t){this.computed=t,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0,this.__v_skip=!0}track(t){}trigger(t){this.version++,this.notify(t)}notify(t){ue();try{for(let n=this.subs;n;n=n.prevSub)n.sub.notify()&&n.sub.dep.notify()}finally{le()}}}const he=new WeakMap,C=Symbol(""),pe=Symbol(""),K=Symbol("");function E(e,t,n){if(G&&Tt){let s=he.get(e);s||he.set(e,s=new Map);let r=s.get(n);r||(s.set(n,r=new Pe),r.map=s,r.key=n),r.track()}}function I(e,t,n,s,r,o){const i=he.get(e);if(!i)return;const c=a=>{a&&a.trigger()};if(ue(),t==="clear")i.forEach(c);else{const a=z(e),u=a&&ie(n);if(a&&n==="length"){const l=Number(s);i.forEach((f,d)=>{(d==="length"||d===K||!L(d)&&d>=l)&&c(f)})}else switch((n!==void 0||i.has(void 0))&&c(i.get(n)),u&&c(i.get(K)),t){case"add":a?u&&c(i.get("length")):(c(i.get(C)),Y(e)&&c(i.get(pe)));break;case"delete":a||(c(i.get(C)),Y(e)&&c(i.get(pe)));break;case"set":Y(e)&&c(i.get(C));break}}le()}function $(e){const t=p(e);return t===e?t:(E(t,"iterate",K),N(e)?t:t.map(v))}function ge(e){return E(e=p(e),"iterate",K),e}const zt={__proto__:null,[Symbol.iterator](){return _e(this,Symbol.iterator,v)},concat(...e){return $(this).concat(...e.map(t=>z(t)?$(t):t))},entries(){return _e(this,"entries",e=>(e[1]=v(e[1]),e))},every(e,t){return O(this,"every",e,t,void 0,arguments)},filter(e,t){return O(this,"filter",e,t,n=>n.map(v),arguments)},find(e,t){return O(this,"find",e,t,v,arguments)},findIndex(e,t){return O(this,"findIndex",e,t,void 0,arguments)},findLast(e,t){return O(this,"findLast",e,t,v,arguments)},findLastIndex(e,t){return O(this,"findLastIndex",e,t,void 0,arguments)},forEach(e,t){return O(this,"forEach",e,t,void 0,arguments)},includes(...e){return me(this,"includes",e)},indexOf(...e){return me(this,"indexOf",e)},join(e){return $(this).join(e)},lastIndexOf(...e){return me(this,"lastIndexOf",e)},map(e,t){return O(this,"map",e,t,void 0,arguments)},pop(){return q(this,"pop")},push(...e){return q(this,"push",e)},reduce(e,...t){return Ae(this,"reduce",e,t)},reduceRight(e,...t){return Ae(this,"reduceRight",e,t)},shift(){return q(this,"shift")},some(e,t){return O(this,"some",e,t,void 0,arguments)},splice(...e){return q(this,"splice",e)},toReversed(){return $(this).toReversed()},toSorted(e){return $(this).toSorted(e)},toSpliced(...e){return $(this).toSpliced(...e)},unshift(...e){return q(this,"unshift",e)},values(){return _e(this,"values",v)}};function _e(e,t,n){const s=ge(e),r=s[t]();return s!==e&&!N(e)&&(r._next=r.next,r.next=()=>{const o=r._next();return o.done||(o.value=n(o.value)),o}),r}const Ct=Array.prototype;function O(e,t,n,s,r,o){const i=ge(e),c=i!==e&&!N(e),a=i[t];if(a!==Ct[t]){const f=a.apply(e,o);return c?v(f):f}let u=n;i!==e&&(c?u=function(f,d){return n.call(this,v(f),d,e)}:n.length>2&&(u=function(f,d){return n.call(this,f,d,e)}));const l=a.call(i,u,s);return c&&r?r(l):l}function Ae(e,t,n,s){const r=ge(e);let o=n;return r!==e&&(N(e)?n.length>3&&(o=function(i,c,a){return n.call(this,i,c,a,e)}):o=function(i,c,a){return n.call(this,i,v(c),a,e)}),r[t](o,...s)}function me(e,t,n){const s=p(e);E(s,"iterate",K);const r=s[t](...n);return(r===-1||r===!1)&&Jt(n[0])?(n[0]=p(n[0]),s[t](...n)):r}function q(e,t,n=[]){fe(),ue();const s=p(e)[t].apply(e,n);return le(),de(),s}const kt=xt("__proto__,__v_isRef,__isVue"),Le=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(L));function Vt(e){L(e)||(e=String(e));const t=p(this);return E(t,"has",e),t.hasOwnProperty(e)}class We{constructor(t=!1,n=!1){this._isReadonly=t,this._isShallow=n}get(t,n,s){if(n==="__v_skip")return t.__v_skip;const r=this._isReadonly,o=this._isShallow;if(n==="__v_isReactive")return!r;if(n==="__v_isReadonly")return r;if(n==="__v_isShallow")return o;if(n==="__v_raw")return s===(r?o?Kt:qe:o?Ht:Ke).get(t)||Object.getPrototypeOf(t)===Object.getPrototypeOf(s)?t:void 0;const i=z(t);if(!r){let a;if(i&&(a=zt[n]))return a;if(n==="hasOwnProperty")return Vt}const c=Reflect.get(t,n,k(t)?t:s);if((L(n)?Le.has(n):kt(n))||(r||E(t,"get",n),o))return c;if(k(c)){const a=i&&ie(n)?c:c.value;return r&&W(a)?we(a):a}return W(c)?r?we(c):Ue(c):c}}class $t extends We{constructor(t=!1){super(!1,t)}set(t,n,s,r){let o=t[n];if(!this._isShallow){const a=j(o);if(!N(s)&&!j(s)&&(o=p(o),s=p(s)),!z(t)&&k(o)&&!k(s))return a||(o.value=s),!0}const i=z(t)&&ie(n)?Number(n)<t.length:se(t,n),c=Reflect.set(t,n,s,k(t)?t:r);return t===p(r)&&(i?H(s,o)&&I(t,"set",n,s,o):I(t,"add",n,s)),c}deleteProperty(t,n){const s=se(t,n),r=t[n],o=Reflect.deleteProperty(t,n);return o&&s&&I(t,"delete",n,void 0,r),o}has(t,n){const s=Reflect.has(t,n);return(!L(n)||!Le.has(n))&&E(t,"has",n),s}ownKeys(t){return E(t,"iterate",z(t)?"length":C),Reflect.ownKeys(t)}}class jt extends We{constructor(t=!1){super(!0,t)}set(t,n){return!0}deleteProperty(t,n){return!0}}const Dt=new $t,Ft=new jt,ye=e=>e,Q=e=>Reflect.getPrototypeOf(e);function Pt(e,t,n){return function(...s){const r=this.__v_raw,o=p(r),i=Y(o),c=e==="entries"||e===Symbol.iterator&&i,a=e==="keys"&&i,u=r[e](...s),l=n?ye:t?be:v;return!t&&E(o,"iterate",a?pe:C),{next(){const{value:f,done:d}=u.next();return d?{value:f,done:d}:{value:c?[l(f[0]),l(f[1])]:l(f),done:d}},[Symbol.iterator](){return this}}}}function X(e){return function(...t){return e==="delete"?!1:e==="clear"?void 0:this}}function At(e,t){const n={get(r){const o=this.__v_raw,i=p(o),c=p(r);e||(H(r,c)&&E(i,"get",r),E(i,"get",c));const{has:a}=Q(i),u=t?ye:e?be:v;if(a.call(i,r))return u(o.get(r));if(a.call(i,c))return u(o.get(c));o!==i&&o.get(r)},get size(){const r=this.__v_raw;return!e&&E(p(r),"iterate",C),r.size},has(r){const o=this.__v_raw,i=p(o),c=p(r);return e||(H(r,c)&&E(i,"has",r),E(i,"has",c)),r===c?o.has(r):o.has(r)||o.has(c)},forEach(r,o){const i=this,c=i.__v_raw,a=p(c),u=t?ye:e?be:v;return!e&&E(a,"iterate",C),c.forEach((l,f)=>r.call(o,u(l),u(f),i))}};return Ce(n,e?{add:X("add"),set:X("set"),delete:X("delete"),clear:X("clear")}:{add(r){!t&&!N(r)&&!j(r)&&(r=p(r));const o=p(this);return Q(o).has.call(o,r)||(o.add(r),I(o,"add",r,r)),this},set(r,o){!t&&!N(o)&&!j(o)&&(o=p(o));const i=p(this),{has:c,get:a}=Q(i);let u=c.call(i,r);u||(r=p(r),u=c.call(i,r));const l=a.call(i,r);return i.set(r,o),u?H(o,l)&&I(i,"set",r,o,l):I(i,"add",r,o),this},delete(r){const o=p(this),{has:i,get:c}=Q(o);let a=i.call(o,r);a||(r=p(r),a=i.call(o,r));const u=c?c.call(o,r):void 0,l=o.delete(r);return a&&I(o,"delete",r,void 0,u),l},clear(){const r=p(this),o=r.size!==0,i=void 0,c=r.clear();return o&&I(r,"clear",void 0,void 0,i),c}}),["keys","values","entries",Symbol.iterator].forEach(r=>{n[r]=Pt(r,e,t)}),n}function He(e,t){const n=At(e,t);return(s,r,o)=>r==="__v_isReactive"?!e:r==="__v_isReadonly"?e:r==="__v_raw"?s:Reflect.get(se(n,r)&&r in s?n:s,r,o)}const Lt={get:He(!1,!1)},Wt={get:He(!0,!1)};function Wn(e,t,n){const s=p(n);if(s!==n&&t.call(e,s)){const r=$e(e);Rt(`Reactive ${r} contains both the raw and reactive versions of the same object${r==="Map"?" as keys":""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}const Ke=new WeakMap,Ht=new WeakMap,qe=new WeakMap,Kt=new WeakMap;function qt(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Ut(e){return e.__v_skip||!Object.isExtensible(e)?0:qt($e(e))}function Ue(e){return j(e)?e:Je(e,!1,Dt,Lt,Ke)}function we(e){return Je(e,!0,Ft,Wt,qe)}function Je(e,t,n,s,r){if(!W(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const o=Ut(e);if(o===0)return e;const i=r.get(e);if(i)return i;const c=new Proxy(e,o===2?s:n);return r.set(e,c),c}function j(e){return!!(e&&e.__v_isReadonly)}function N(e){return!!(e&&e.__v_isShallow)}function Jt(e){return e?!!e.__v_raw:!1}function p(e){const t=e&&e.__v_raw;return t?p(t):e}const v=e=>W(e)?Ue(e):e,be=e=>W(e)?we(e):e;function k(e){return e?e.__v_isRef===!0:!1}function Bt(e){return Yt(e,!1)}function Yt(e,t){return k(e)?e:new Gt(e,t)}class Gt{constructor(t,n){this.dep=new Pe,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=n?t:p(t),this._value=n?t:v(t),this.__v_isShallow=n}get value(){return this.dep.track(),this._value}set value(t){const n=this._rawValue,s=this.__v_isShallow||N(t)||j(t);t=s?t:p(t),H(t,n)&&(this._rawValue=t,this._value=s?t:v(t),this.dep.trigger())}}/**
* @vue/runtime-core v3.5.22
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const V=[];function Hn(e){V.push(e)}function Kn(){V.pop()}let ve=!1;function qn(e,...t){if(ve)return;ve=!0,fe();const n=V.length?V[V.length-1].component:null,s=n&&n.appContext.config.warnHandler,r=Qt();if(s)Ee(s,n,11,[e+t.map(o=>{var i,c;return(c=(i=o.toString)==null?void 0:i.call(o))!=null?c:JSON.stringify(o)}).join(""),n&&n.proxy,r.map(({vnode:o})=>`at <${et(n,o.type)}>`).join(`
`),r]);else{const o=[`[Vue warn]: ${e}`,...t];r.length&&o.push(`
`,...Xt(r)),console.warn(...o)}de(),ve=!1}function Qt(){let e=V[V.length-1];if(!e)return[];const t=[];for(;e;){const n=t[0];n&&n.vnode===e?n.recurseCount++:t.push({vnode:e,recurseCount:0});const s=e.component&&e.component.parent;e=s&&s.vnode}return t}function Xt(e){const t=[];return e.forEach((n,s)=>{t.push(...s===0?[]:[`
`],...Zt(n))}),t}function Zt({vnode:e,recurseCount:t}){const n=t>0?`... (${t} recursive calls)`:"",s=e.component?e.component.parent==null:!1,r=` at <${et(e.component,e.type,s)}`,o=">"+n;return e.props?[r,...en(e.props),o]:[r+o]}function en(e){const t=[],n=Object.keys(e);return n.slice(0,3).forEach(s=>{t.push(...Be(s,e[s]))}),n.length>3&&t.push(" ..."),t}function Be(e,t,n){return ke(t)?(t=JSON.stringify(t),n?t:[`${e}=${t}`]):typeof t=="number"||typeof t=="boolean"||t==null?n?t:[`${e}=${t}`]:k(t)?(t=Be(e,p(t.value),!0),n?t:[`${e}=Ref<`,t,">"]):oe(t)?[`${e}=fn${t.name?`<${t.name}>`:""}`]:(t=p(t),n?t:[`${e}=`,t])}const Un={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",0:"setup function",1:"render function",2:"watcher getter",3:"watcher callback",4:"watcher cleanup function",5:"native event handler",6:"component event handler",7:"vnode hook",8:"directive hook",9:"transition hook",10:"app errorHandler",11:"app warnHandler",12:"ref function",13:"async component loader",14:"scheduler flush",15:"component update",16:"app unmount cleanup function"};function Ee(e,t,n,s){try{return s?e(...s):e()}catch(r){Ye(r,t,n)}}function Ye(e,t,n,s=!0){const r=t?t.vnode:null,{errorHandler:o,throwUnhandledErrorInProduction:i}=t&&t.appContext.config||Ot;if(t){let c=t.parent;const a=t.proxy,u=`https://vuejs.org/error-reference/#runtime-${n}`;for(;c;){const l=c.ec;if(l){for(let f=0;f<l.length;f++)if(l[f](e,a,u)===!1)return}c=c.parent}if(o){fe(),Ee(o,null,10,[e,a,u]),de();return}}tn(e,n,r,s,i)}function tn(e,t,n,s=!0,r=!1){if(r)throw e;console.error(e)}const x=[];let S=-1;const D=[];let M=null,F=0;const nn=Promise.resolve();let xe=null;const rn=100;function sn(e){let t=S+1,n=x.length;for(;t<n;){const s=t+n>>>1,r=x[s],o=U(r);o<e||o===e&&r.flags&2?t=s+1:n=s}return t}function on(e){if(!(e.flags&1)){const t=U(e),n=x[x.length-1];!n||!(e.flags&2)&&t>=U(n)?x.push(e):x.splice(sn(t),0,e),e.flags|=1,Ge()}}function Ge(){xe||(xe=nn.then(Qe))}function cn(e){z(e)?D.push(...e):M&&e.id===-1?M.splice(F+1,0,e):e.flags&1||(D.push(e),e.flags|=1),Ge()}function an(e){if(D.length){const t=[...new Set(D)].sort((n,s)=>U(n)-U(s));if(D.length=0,M){M.push(...t);return}for(M=t,F=0;F<M.length;F++){const n=M[F];n.flags&4&&(n.flags&=-2),n.flags&8||n(),n.flags&=-2}M=null,F=0}}const U=e=>e.id==null?e.flags&2?-1:1/0:e.id;function Qe(e){const t=St;try{for(S=0;S<x.length;S++){const n=x[S];n&&!(n.flags&8)&&(n.flags&4&&(n.flags&=-2),Ee(n,n.i,n.i?15:14),n.flags&4||(n.flags&=-2))}}finally{for(;S<x.length;S++){const n=x[S];n&&(n.flags&=-2)}S=-1,x.length=0,an(e),xe=null,(x.length||D.length)&&Qe(e)}}function Jn(e,t){const n=e.get(t)||0;if(n>rn){const s=t.i,r=s&&Ze(s.type);return Ye(`Maximum recursive updates exceeded${r?` in component <${r}>`:""}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`,null,10),!0}return e.set(t,n+1),!1}const Oe=new Map,Z=new Map;function Bn(e,t){return Z.has(e)?!1:(Z.set(e,{initialDef:ee(t),instances:new Set}),!0)}function ee(e){return fn(e)?e.__vccOpts:e}function Yn(e,t){const n=Z.get(e);n&&(n.initialDef.render=t,[...n.instances].forEach(s=>{t&&(s.render=t,ee(s.type).render=t),s.renderCache=[],s.job.flags&8||s.update()}))}function Gn(e,t){const n=Z.get(e);if(!n)return;t=ee(t),Xe(n.initialDef,t);const s=[...n.instances];for(let r=0;r<s.length;r++){const o=s[r],i=ee(o.type);let c=Oe.get(i);c||(i!==n.initialDef&&Xe(i,t),Oe.set(i,c=new Set)),c.add(o),o.appContext.propsCache.delete(o.type),o.appContext.emitsCache.delete(o.type),o.appContext.optionsCache.delete(o.type),o.ceReload?(c.add(o),o.ceReload(t.styles),c.delete(o)):o.parent?on(()=>{o.job.flags&8||(o.parent.update(),c.delete(o))}):o.appContext.reload?o.appContext.reload():typeof window<"u"?window.location.reload():console.warn("[HMR] Root or manually mounted instance modified. Full reload required."),o.root.ce&&o!==o.root&&o.root.ce._removeChildStyle(i)}cn(()=>{Oe.clear()})}function Xe(e,t){Ce(e,t);for(const n in e)n!=="__file"&&!(n in t)&&delete e[n]}function Qn(e){return(t,n)=>{try{return e(t,n)}catch(s){console.error(s),console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.")}}}ce().requestIdleCallback,ce().cancelIdleCallback;const Xn={};{const e=ce(),t=(n,s)=>{let r;return(r=e[n])||(r=e[n]=[]),r.push(s),o=>{r.length>1?r.forEach(i=>i(o)):r[0](o)}};t("__VUE_INSTANCE_SETTERS__",n=>n),t("__VUE_SSR_SETTERS__",n=>n)}const un=/(?:^|[-_])\w/g,ln=e=>e.replace(un,t=>t.toUpperCase()).replace(/[-_]/g,"");function Ze(e,t=!0){return oe(e)?e.displayName||e.name:e.name||t&&e.__name}function et(e,t,n=!1){let s=Ze(t);if(!s&&t.__file){const r=t.__file.match(/([^/\\]+)\.\w+$/);r&&(s=r[1])}if(!s&&e&&e.parent){const r=o=>{for(const i in o)if(o[i]===t)return i};s=r(e.components||e.parent.type.components)||r(e.appContext.components)}return s?ln(s):n?"App":"Anonymous"}function fn(e){return oe(e)&&"__vccOpts"in e}const tt=()=>document.documentElement.getAttribute("data-theme")==="dark";[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:dn}=Object,{fromEntries:hn}=Object,nt=Bt(!1);typeof document<"u"&&(nt.value=tt(),new MutationObserver(()=>{nt.value=tt()}).observe(document.documentElement,{attributeFilter:["data-theme"],attributes:!0}));const pn="ENTRIES",rt="KEYS",st="VALUES",w="";class Se{set;_type;_path;constructor(t,n){const s=t._tree,r=Array.from(s.keys());this.set=t,this._type=n,this._path=r.length>0?[{node:s,keys:r}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:n}=P(this._path);if(P(n)===w)return{done:!1,value:this.result()};const s=t.get(P(n));return this._path.push({node:s,keys:Array.from(s.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=P(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>P(t)).filter(t=>t!==w).join("")}value(){return P(this._path).node.get(w)}result(){switch(this._type){case st:return this.value();case rt:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const P=e=>e[e.length-1],gn=(e,t,n)=>{const s=new Map;if(typeof t!="string")return s;const r=t.length+1,o=r+n,i=new Uint8Array(o*r).fill(n+1);for(let c=0;c<r;++c)i[c]=c;for(let c=1;c<o;++c)i[c*r]=c;return ot(e,t,n,s,i,1,r,""),s},ot=(e,t,n,s,r,o,i,c)=>{const a=o*i;e:for(const u of e.keys())if(u===w){const l=r[a-1];l<=n&&s.set(c,[e.get(u),l])}else{let l=o;for(let f=0;f<u.length;++f,++l){const d=u[f],m=i*l,b=m-i;let g=r[m];const h=Math.max(0,l-n-1),_=Math.min(i-1,l+n);for(let y=h;y<_;++y){const R=d!==t[y],re=r[b+y]+ +R,B=r[b+y+1]+1,T=r[m+y]+1,A=r[m+y+1]=Math.min(re,B,T);A<g&&(g=A)}if(g>n)continue e}ot(e.get(u),t,n,s,r,l,i,c+u)}};let it=class J{_tree;_prefix;_size=void 0;constructor(t=new Map,n=""){this._tree=t,this._prefix=n}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[n,s]=te(this._tree,t.slice(this._prefix.length));if(n===void 0){const[r,o]=Me(s);for(const i of r.keys())if(i!==w&&i.startsWith(o)){const c=new Map;return c.set(i.slice(o.length),r.get(i)),new J(c,t)}}return new J(n,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,_n(this._tree,t)}entries(){return new Se(this,pn)}forEach(t){for(const[n,s]of this)t(n,s,this)}fuzzyGet(t,n){return gn(this._tree,t,n)}get(t){const n=Ie(this._tree,t);return n!==void 0?n.get(w):void 0}has(t){return Ie(this._tree,t)?.has(w)??!1}keys(){return new Se(this,rt)}set(t,n){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,Ne(this._tree,t).set(w,n),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,n){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const s=Ne(this._tree,t);return s.set(w,n(s.get(w))),this}fetch(t,n){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const s=Ne(this._tree,t);let r=s.get(w);return r===void 0&&s.set(w,r=n()),r}values(){return new Se(this,st)}[Symbol.iterator](){return this.entries()}static from(t){const n=new J;for(const[s,r]of t)n.set(s,r);return n}static fromObject(t){return J.from(Object.entries(t))}};const te=(e,t,n=[])=>{if(t.length===0||e==null)return[e,n];for(const s of e.keys())if(s!==w&&t.startsWith(s))return n.push([e,s]),te(e.get(s),t.slice(s.length),n);return n.push([e,t]),te(void 0,"",n)},Ie=(e,t)=>{if(t.length===0||!e)return e;for(const n of e.keys())if(n!==w&&t.startsWith(n))return Ie(e.get(n),t.slice(n.length))},Ne=(e,t)=>{const n=t.length;e:for(let s=0;e&&s<n;){for(const o of e.keys())if(o!==w&&t[s]===o[0]){const i=Math.min(n-s,o.length);let c=1;for(;c<i&&t[s+c]===o[c];)++c;const a=e.get(o);if(c===o.length)e=a;else{const u=new Map;u.set(o.slice(c),a),e.set(t.slice(s,s+c),u),e.delete(o),e=u}s+=c;continue e}const r=new Map;return e.set(t.slice(s),r),r}return e},_n=(e,t)=>{const[n,s]=te(e,t);if(n!==void 0){if(n.delete(w),n.size===0)ct(s);else if(n.size===1){const[r,o]=n.entries().next().value;at(s,r,o)}}},ct=e=>{if(e.length===0)return;const[t,n]=Me(e);if(t.delete(n),t.size===0)ct(e.slice(0,-1));else if(t.size===1){const[s,r]=t.entries().next().value;s!==w&&at(e.slice(0,-1),s,r)}},at=(e,t,n)=>{if(e.length===0)return;const[s,r]=Me(e);s.set(r+t,n),s.delete(r)},Me=e=>e[e.length-1],mn=(e,t)=>{const n=e._idToShortId.get(t);if(n!=null)return e._storedFields.get(n)},yn=/[\n\r\p{Z}\p{P}]+/u,Re="or",ut="and",wn="and_not",bn=(e,t)=>{e.includes(t)||e.push(t)},lt=(e,t)=>{for(const n of t)e.includes(n)||e.push(n)},ft=({score:e},{score:t})=>t-e,vn=()=>new Map,ne=e=>{const t=new Map;for(const n of Object.keys(e))t.set(parseInt(n,10),e[n]);return t},dt=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[Re]:(e,t)=>{for(const n of t.keys()){const s=e.get(n);if(s==null)e.set(n,t.get(n));else{const{score:r,terms:o,match:i}=t.get(n);s.score=s.score+r,s.match=Object.assign(s.match,i),lt(s.terms,o)}}return e},[ut]:(e,t)=>{const n=new Map;for(const s of t.keys()){const r=e.get(s);if(r==null)continue;const{score:o,terms:i,match:c}=t.get(s);lt(r.terms,i),n.set(s,{score:r.score+o,terms:r.terms,match:Object.assign(r.match,c)})}return n},[wn]:(e,t)=>{for(const n of t.keys())e.delete(n);return e}},En=(e,t,n,s,r,o)=>{const{k:i,b:c,d:a}=o;return Math.log(1+(n-t+.5)/(t+.5))*(a+e*(i+1)/(e+i*(1-c+c*s/r)))},xn=e=>(t,n,s)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,n,s):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,n,s):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,n,s):1}),pt=(e,t,n,s)=>{for(const r of Object.keys(e._fieldIds))if(e._fieldIds[r]===n){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${s}" was not present in field "${r}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},On=(e,t,n,s)=>{if(!e._index.has(s)){pt(e,n,t,s);return}const r=e._index.fetch(s,vn),o=r.get(t),i=o?.get(n);!o||typeof i>"u"?pt(e,n,t,s):i<=1?o.size<=1?r.delete(t):o.delete(n):o.set(n,i-1),e._index.get(s).size===0&&e._index.delete(s)},Sn={k:1.2,b:.7,d:.5},In={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(yn),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},gt={combineWith:Re,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:Sn},Nn={combineWith:ut,prefix:(e,t,n)=>t===n.length-1},Mn={batchSize:1e3,batchWait:10},_t={minDirtFactor:.1,minDirtCount:20},Rn={...Mn,..._t},mt=Symbol("*"),Tn=(e,t)=>{const n=new Map,s={...e._options.searchOptions,...t};for(const[r,o]of e._documentIds){const i=s.boostDocument?s.boostDocument(o,"",e._storedFields.get(r)):1;n.set(r,{score:i,terms:[],match:{}})}return n},yt=(e,t=Re)=>{if(e.length===0)return new Map;const n=t.toLowerCase();if(!(n in ht))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(ht[n])},Te=(e,t,n,s,r,o,i,c,a,u=new Map)=>{if(o==null)return u;for(const l of Object.keys(i)){const f=i[l],d=e._fieldIds[l],m=o.get(d);if(m==null)continue;let b=m.size;const g=e._avgFieldLength[d];for(const h of m.keys()){if(!e._documentIds.has(h)){On(e,d,h,n),b-=1;continue}const _=c?c(e._documentIds.get(h),n,e._storedFields.get(h)):1;if(!_)continue;const y=m.get(h),R=e._fieldLength.get(h)[d],re=En(y,b,e._documentCount,R,g,a),B=s*r*f*_*re,T=u.get(h);if(T){T.score+=B,bn(T.terms,t);const A=dt(T.match,n);A?A.push(l):T.match[n]=[l]}else u.set(h,{score:B,terms:[t],match:{[n]:[l]}})}}return u},zn=(e,t,n)=>{const s={...e._options.searchOptions,...n},r=(s.fields??e._options.fields).reduce((g,h)=>({...g,[h]:dt(s.boost,h)||1}),{}),{boostDocument:o,weights:i,maxFuzzy:c,bm25:a}=s,{fuzzy:u,prefix:l}={...gt.weights,...i},f=e._index.get(t.term),d=Te(e,t.term,t.term,1,t.termBoost,f,r,o,a);let m,b;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const g=t.fuzzy===!0?.2:t.fuzzy,h=g<1?Math.min(c,Math.round(t.term.length*g)):g;h&&(b=e._index.fuzzyGet(t.term,h))}if(m)for(const[g,h]of m){const _=g.length-t.term.length;if(!_)continue;b?.delete(g);const y=l*g.length/(g.length+.3*_);Te(e,t.term,g,y,t.termBoost,h,r,o,a,d)}if(b)for(const g of b.keys()){const[h,_]=b.get(g);if(!_)continue;const y=u*g.length/(g.length+_);Te(e,t.term,g,y,t.termBoost,h,r,o,a,d)}return d},wt=(e,t,n={})=>{if(t===mt)return Tn(e,n);if(typeof t!="string"){const l={...n,...t,queries:void 0},f=t.queries.map(d=>wt(e,d,l));return yt(f,l.combineWith)}const{tokenize:s,processTerm:r,searchOptions:o}=e._options,i={tokenize:s,processTerm:r,...o,...n},{tokenize:c,processTerm:a}=i,u=c(t).flatMap(l=>a(l)).filter(l=>!!l).map(xn(i)).map(l=>zn(e,l,i));return yt(u,i.combineWith)},bt=(e,t,n={})=>{const{searchOptions:s}=e._options,r={...s,...n},o=wt(e,t,n),i=[];for(const[c,{score:a,terms:u,match:l}]of o){const f=u.length||1,d={id:e._documentIds.get(c),score:a*f,terms:Object.keys(l),queryTerms:u,match:l};Object.assign(d,e._storedFields.get(c)),(r.filter==null||r.filter(d))&&i.push(d)}return t===mt&&r.boostDocument==null||i.sort(ft),i},Cn=(e,t,n={})=>{n={...e._options.autoSuggestOptions,...n};const s=new Map;for(const{score:o,terms:i}of bt(e,t,n)){const c=i.join(" "),a=s.get(c);a!=null?(a.score+=o,a.count+=1):s.set(c,{score:o,terms:i,count:1})}const r=[];for(const[o,{score:i,terms:c,count:a}]of s)r.push({suggestion:o,terms:c,score:i/a});return r.sort(ft),r};class kn{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const n=t.autoVacuum==null||t.autoVacuum===!0?Rn:t.autoVacuum;this._options={...In,...t,autoVacuum:n,searchOptions:{...gt,...t.searchOptions},autoSuggestOptions:{...Nn,...t.autoSuggestOptions}},this._index=new it,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=_t,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[n,s]of this._index){const r={};for(const[o,i]of s)r[o]=Object.fromEntries(i);t.push([n,r])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let n=0;n<t.length;n++)this._fieldIds[t[n]]=n}}const Vn=e=>new kn(e),$n=({documentCount:e,nextId:t,fieldIds:n,averageFieldLength:s,dirtCount:r,version:o},i)=>{if(o!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=Vn(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=n,c._avgFieldLength=s,c._dirtCount=r??0,c._index=new it,c},jn=(e,t)=>{const{index:n,documentIds:s,fieldLength:r,storedFields:o}=e,i=$n(e,t);i._documentIds=ne(s),i._fieldLength=ne(r),i._storedFields=ne(o);for(const[c,a]of i._documentIds)i._idToShortId.set(a,c);for(const[c,a]of n){const u=new Map;for(const l of Object.keys(a))u.set(parseInt(l,10),ne(a[l]));i._index.set(c,u)}return i},ze=(e,t)=>{const n=e.toLowerCase(),s=t.toLowerCase(),r=[];let o=0,i=0;const c=(u,l=!1)=>{let f;i===0?f=u.length>20?`… ${u.slice(-20)}`:u:l?f=u.length+i>100?`${u.slice(0,100-i)}… `:u:f=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,f&&r.push(f),i+=f.length,l||(r.push(["mark",t]),i+=t.length,i>=100&&r.push(" …"))};let a=n.indexOf(s,o);if(a===-1)return null;for(;a>=0;){const u=a+s.length;if(c(e.slice(o,a)),o=u,i>100)break;a=n.indexOf(s,o)}return i<100&&c(e.slice(o),!0),r},{entries:Dn}=Object,Fn=(e,t)=>t.contents.reduce((n,[,s])=>n+s,0)-e.contents.reduce((n,[,s])=>n+s,0),Pn=(e,t)=>Math.max(...t.contents.map(([,n])=>n))-Math.max(...e.contents.map(([,n])=>n)),vt=(e,t,n={},s="max")=>{const r={};return bt(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...n}).forEach(o=>{const{id:i,terms:c,score:a}=o,u=i.includes("@"),l=i.includes("#"),[f,d]=i.split(/[#@]/),m=Number(f),b=c.sort((h,_)=>h.length-_.length).filter((h,_)=>c.slice(_+1).every(y=>!y.includes(h))),{contents:g}=r[m]??={title:"",contents:[]};if(u)g.push([{type:"customField",id:m,index:d,display:b.map(h=>o.c.map(_=>ze(_,h))).flat().filter(h=>h!==null)},a]);else{const h=b.map(_=>ze(o.h,_)).filter(_=>_!==null);if(h.length&&g.push([{type:l?"heading":"title",id:m,...l&&{anchor:d},display:h},a]),"t"in o&&o.t)for(const _ of o.t){const y=b.map(R=>ze(_,R)).filter(R=>R!==null);y.length&&g.push([{type:"text",id:m,...l&&{anchor:d},display:y},a])}}}),Dn(r).sort(([,o],[,i])=>(s?Fn:Pn)(o,i)).map(([o,{title:i,contents:c}])=>{if(!i){const a=mn(t,o);a&&(i=a.h)}return{title:i,contents:c.map(([a])=>a)}})},Et=(e,t,n={})=>{const s=Cn(t,e,{fuzzy:.2,maxFuzzy:3,...n}).map(({suggestion:r})=>r);return e.includes(" ")?s:s.filter(r=>!r.includes(" "))},An=hn(dn(JSON.parse("{\"/\":{\"documentCount\":155,\"nextId\":155,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"1#个人能力\",\"3\":\"1#个人奖项\",\"4\":\"1#ccpc-中国大学生程序设计竞赛-china-collegiate-programming-contest\",\"5\":\"1#中国高校计算机大赛-团体程序天梯赛\",\"6\":\"1#福建省大学生程序设计竞赛\",\"7\":\"2\",\"8\":\"2#学习路线-1\",\"9\":\"2#应聘要求参考\",\"10\":\"2@0\",\"11\":\"2@1\",\"12\":\"3\",\"13\":\"3@0\",\"14\":\"4\",\"15\":\"4@0\",\"16\":\"4@1\",\"17\":\"5\",\"18\":\"5@0\",\"19\":\"5@1\",\"20\":\"6\",\"21\":\"6#markdown-介绍\",\"22\":\"6#markdown-配置\",\"23\":\"6#markdown-扩展\",\"24\":\"6#vuepress-扩展\",\"25\":\"6#主题扩展\",\"26\":\"6#选项卡\",\"27\":\"6#脚注\",\"28\":\"6#导入文件\",\"29\":\"6#tex-语法\",\"30\":\"6#任务列表\",\"31\":\"6#图片增强\",\"32\":\"6#上下角标\",\"33\":\"6#组件\",\"34\":\"6@0\",\"35\":\"6@1\",\"36\":\"7\",\"37\":\"7#_6倍速普通方法\",\"38\":\"7#埃筛-时间换内存\",\"39\":\"7#欧拉筛-内存换时间\",\"40\":\"7#求余\",\"41\":\"7#龟速乘-防止炸范围\",\"42\":\"7#快速幂-防止超时\",\"43\":\"7#矩阵快速幂\",\"44\":\"7#最大公因数\",\"45\":\"7#最小公倍数\",\"46\":\"7#组合数-c-n-m\",\"47\":\"7#排列数-a-n-m\",\"48\":\"7#逆元\",\"49\":\"7#二分查找函数\",\"50\":\"7#二进制枚举\",\"51\":\"7#全排列\",\"52\":\"7#_10进制转k进制\",\"53\":\"7#k进制转10进制\",\"54\":\"7#前置函数\",\"55\":\"7#去前置0\",\"56\":\"7#去除小数点\",\"57\":\"7#高精度加法\",\"58\":\"7#高精度减法\",\"59\":\"7#高精度乘法\",\"60\":\"7#高精度除法\",\"61\":\"7#一维前缀和\",\"62\":\"7#二维前缀和\",\"63\":\"7#一维差分\",\"64\":\"7#二维差分\",\"65\":\"7#小tip\",\"66\":\"7#记忆化搜索\",\"67\":\"7#线性dp\",\"68\":\"7#求最长上升子序列\",\"69\":\"7#_01背包-两种状态的dp\",\"70\":\"7#压缩成二维\",\"71\":\"7#压缩成一维\",\"72\":\"7#多重01背包\",\"73\":\"7#完全01背包\",\"74\":\"7#混合01背包\",\"75\":\"7#分组01背包\",\"76\":\"7#二维01背包\",\"77\":\"7#_01背包问题求具体方案\",\"78\":\"7#容量很大的01背包问题\",\"79\":\"7#快速排序\",\"80\":\"7#归并排序\",\"81\":\"7#dijkstra\",\"82\":\"7@0\",\"83\":\"7@1\",\"84\":\"8\",\"85\":\"8#页面标题\",\"86\":\"8#页面信息\",\"87\":\"8#页面内容\",\"88\":\"8#组件\",\"89\":\"8@0\",\"90\":\"8@1\",\"91\":\"9\",\"92\":\"9#标题-2\",\"93\":\"9#标题-3\",\"94\":\"9@0\",\"95\":\"9@1\",\"96\":\"10\",\"97\":\"10#标题-2\",\"98\":\"10#标题-3\",\"99\":\"10@0\",\"100\":\"10@1\",\"101\":\"11\",\"102\":\"11#标题-2\",\"103\":\"11#标题-3\",\"104\":\"11@0\",\"105\":\"11@1\",\"106\":\"12\",\"107\":\"12#标题-2\",\"108\":\"12#标题-3\",\"109\":\"12@0\",\"110\":\"12@1\",\"111\":\"13\",\"112\":\"13#标题-2\",\"113\":\"13#标题-3\",\"114\":\"13@0\",\"115\":\"13@1\",\"116\":\"14\",\"117\":\"14#标题-2\",\"118\":\"14#标题-3\",\"119\":\"14@0\",\"120\":\"14@1\",\"121\":\"15\",\"122\":\"15#标题-2\",\"123\":\"15#标题-3\",\"124\":\"15@0\",\"125\":\"15@1\",\"126\":\"16\",\"127\":\"16#标题-2\",\"128\":\"16#标题-3\",\"129\":\"16@0\",\"130\":\"16@1\",\"131\":\"17\",\"132\":\"17#标题-2\",\"133\":\"17#标题-3\",\"134\":\"17@0\",\"135\":\"17@1\",\"136\":\"18\",\"137\":\"18#标题-2\",\"138\":\"18#标题-3\",\"139\":\"18@0\",\"140\":\"18@1\",\"141\":\"19\",\"142\":\"19#标题-2\",\"143\":\"19#标题-3\",\"144\":\"19@0\",\"145\":\"19@1\",\"146\":\"20\",\"147\":\"20#标题-2\",\"148\":\"20#标题-3\",\"149\":\"20@0\",\"150\":\"20@1\",\"151\":\"21\",\"152\":\"22\",\"153\":\"23\",\"154\":\"24\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,11],\"1\":[1],\"2\":[1,1],\"3\":[1],\"4\":[6,6],\"5\":[2,7],\"6\":[1,6],\"7\":[1],\"8\":[1],\"9\":[1],\"10\":[null,null,1],\"11\":[null,null,1],\"12\":[1],\"13\":[null,null,1],\"14\":[1,18],\"15\":[null,null,1],\"16\":[null,null,1],\"17\":[1,20],\"18\":[null,null,1],\"19\":[null,null,1],\"20\":[2,10],\"21\":[2,8],\"22\":[2,12],\"23\":[2,11],\"24\":[2,10],\"25\":[1,8],\"26\":[1,1],\"27\":[1,3],\"28\":[1,1],\"29\":[2,25],\"30\":[1,5],\"31\":[1,2],\"32\":[1,3],\"33\":[1],\"34\":[null,null,1],\"35\":[null,null,1],\"36\":[1],\"37\":[1,22],\"38\":[3,27],\"39\":[3,25],\"40\":[1,14],\"41\":[3,15],\"42\":[3,16],\"43\":[1],\"44\":[1,9],\"45\":[1,10],\"46\":[5,37],\"47\":[5,19],\"48\":[1,47],\"49\":[1,12],\"50\":[1,39],\"51\":[1,61],\"52\":[1,28],\"53\":[1,28],\"54\":[1],\"55\":[1,15],\"56\":[1,18],\"57\":[1,33],\"58\":[1,37],\"59\":[1,32],\"60\":[1,30],\"61\":[1,25],\"62\":[1,39],\"63\":[1,13],\"64\":[1,38],\"65\":[2,100],\"66\":[1,1],\"67\":[1],\"68\":[1,27],\"69\":[3,49],\"70\":[1,43],\"71\":[1,42],\"72\":[1,56],\"73\":[1,39],\"74\":[1,49],\"75\":[1,43],\"76\":[1,39],\"77\":[1,38],\"78\":[1,75],\"79\":[1,26],\"80\":[1,29],\"81\":[1,40],\"82\":[null,null,1],\"83\":[null,null,1],\"84\":[1,3],\"85\":[1,19],\"86\":[1,20],\"87\":[1,12],\"88\":[1,13],\"89\":[null,null,1],\"90\":[null,null,2],\"91\":[1],\"92\":[2,2],\"93\":[2,2],\"94\":[null,null,1],\"95\":[null,null,3],\"96\":[1],\"97\":[2,2],\"98\":[2,2],\"99\":[null,null,2],\"100\":[null,null,2],\"101\":[1],\"102\":[2,2],\"103\":[2,2],\"104\":[null,null,2],\"105\":[null,null,2],\"106\":[1],\"107\":[2,2],\"108\":[2,2],\"109\":[null,null,1],\"110\":[null,null,2],\"111\":[2],\"112\":[2,2],\"113\":[2,2],\"114\":[null,null,2],\"115\":[null,null,3],\"116\":[2,4],\"117\":[2,2],\"118\":[2,2],\"119\":[null,null,2],\"120\":[null,null,3],\"121\":[2],\"122\":[2,2],\"123\":[2,2],\"124\":[null,null,1],\"125\":[null,null,3],\"126\":[2],\"127\":[2,2],\"128\":[2,2],\"129\":[null,null,1],\"130\":[null,null,3],\"131\":[2],\"132\":[2,2],\"133\":[2,2],\"134\":[null,null,1],\"135\":[null,null,3],\"136\":[2,2],\"137\":[2,2],\"138\":[2,2],\"139\":[null,null,1],\"140\":[null,null,3],\"141\":[2],\"142\":[2,2],\"143\":[2,2],\"144\":[null,null,2],\"145\":[null,null,3],\"146\":[2],\"147\":[2,2],\"148\":[2,2],\"149\":[null,null,2],\"150\":[null,null,3],\"151\":[1,3],\"152\":[1],\"153\":[1],\"154\":[1]},\"averageFieldLength\":[1.5211352947043062,16.878667702570503,0.7573051300172216],\"storedFields\":{\"0\":{\"h\":\"swordfish的博客\",\"t\":[\"这是一个博客主页的案例。\",\"要使用此布局，你应该在页面前端设置 layout: Blog 和 home: true。\",\"相关配置文档请见 博客主页。\"]},\"1\":{\"h\":\"个人介绍\"},\"2\":{\"h\":\"个人能力\",\"t\":[\"待填\"]},\"3\":{\"h\":\"个人奖项\"},\"4\":{\"h\":\"CCPC 中国大学生程序设计竞赛 / China Collegiate Programming Contest\",\"t\":[\"2024年 - 郑州邀请赛 铜奖🥉\",\"2024年 - 福州邀请赛 铜奖🥉\",\"2025年 - 东北邀请赛 铜奖🥉\",\"2025年 - 郑州邀请赛 铜奖🥉\",\"2025年 - 福州邀请赛 铜奖🥉\"]},\"5\":{\"h\":\"中国高校计算机大赛 - 团体程序天梯赛\",\"t\":[\"2025年 - 第十届 全国二等奖🥈 福建省一等奖🥇\",\"2024年 - 第九届 福建省三等奖🥉\"]},\"6\":{\"h\":\"福建省大学生程序设计竞赛\",\"t\":[\"2025年 - 第十二届 银奖🥈\",\"2024年 - 第十一届 铜奖🥉\"]},\"7\":{\"h\":\"学习路线\"},\"8\":{\"h\":\"学习路线\"},\"9\":{\"h\":\"应聘要求参考\"},\"10\":{\"c\":[\"火龙果\"]},\"11\":{\"c\":[\"红\"]},\"12\":{\"h\":\"网站收藏\"},\"13\":{\"c\":[\"使用指南\"]},\"14\":{\"h\":\"布局与功能禁用\",\"t\":[\"你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。\",\"本页面就是一个示例，禁用了如下功能:\",\"导航栏\",\"侧边栏\",\"路径导航\",\"页面信息\",\"贡献者\",\"编辑此页链接\",\"更新时间\",\"上一篇/下一篇 链接\",\"评论\",\"页脚\",\"返回顶部按钮\"]},\"15\":{\"c\":[\"使用指南\"]},\"16\":{\"c\":[\"禁用\"]},\"17\":{\"h\":\"布局\",\"t\":[\"布局包括:\",\"导航栏\",\"侧边栏\",\"页脚\",\"同时每个页面包含:\",\"路径导航\",\"标题和页面信息\",\"TOC (文章标题列表)\",\"贡献者、更新时间等页面元信息\",\"评论\",\"主题也带有以下元素:\",\"夜间模式按钮\",\"返回顶部按钮\",\"打印按钮\",\"你可以在主题选项和页面的 frontmatter 中自定义它们。\"]},\"18\":{\"c\":[\"指南\"]},\"19\":{\"c\":[\"布局\"]},\"20\":{\"h\":\"Markdown 使用方法\",\"t\":[\"VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。\",\"你需要创建并编写 Markdown，以便 VuePress 可以根据文件结构将它们转换为不同的页面。\"]},\"21\":{\"h\":\"Markdown 介绍\",\"t\":[\"如果你是一个新手，还不会编写 Markdown，请先阅读 Markdown 介绍 和 Markdown 演示。\"]},\"22\":{\"h\":\"Markdown 配置\",\"t\":[\"VuePress 通过 Frontmatter 为每个 Markdown 页面引入配置。\",\"Frontmatter\",\"Frontmatter 是 VuePress 中很重要的一个概念，请阅读 Frontmatter 介绍 了解详情。\"]},\"23\":{\"h\":\"Markdown 扩展\",\"t\":[\"VuePress 会使用 markdown-it 来解析 Markdown 内容，因此可以借助于 markdown-it 插件来实现 语法扩展 。\"]},\"24\":{\"h\":\"VuePress 扩展\",\"t\":[\"为了丰富文档写作，VuePress 对 Markdown 语法进行了扩展。\",\"关于这些扩展，请阅读 VuePress 中的 Markdown 扩展。\"]},\"25\":{\"h\":\"主题扩展\",\"t\":[\"通过 VuePress 插件，主题扩展了更多 Markdown 语法，提供更加丰富的写作功能。\"]},\"26\":{\"h\":\"选项卡\",\"t\":[\"查看详情\"]},\"27\":{\"h\":\"脚注\",\"t\":[\"此文字有脚注[1].\",\"查看详情\"]},\"28\":{\"h\":\"导入文件\",\"t\":[\"查看详情\"]},\"29\":{\"h\":\"TeX 语法\",\"t\":[\"$$ \\\\frac {\\\\partial^r} {\\\\partial \\\\omega^r} \\\\left(\\\\frac {y^{\\\\omega}} {\\\\omega}\\\\right) = \\\\left(\\\\frac {y^{\\\\omega}} {\\\\omega}\\\\right) \\\\left{(\\\\log y)^r + \\\\sum_{i=1}^r \\\\frac {(-1)^i r \\\\cdots (r-i+1) (\\\\log y)^{r-i}} {\\\\omega^i} \\\\right} $$\",\"查看详情\"]},\"30\":{\"h\":\"任务列表\",\"t\":[\" 计划 1\",\" 计划 2\",\"查看详情\"]},\"31\":{\"h\":\"图片增强\",\"t\":[\"支持为图片设置颜色模式和大小。\",\"查看详情\"]},\"32\":{\"h\":\"上下角标\",\"t\":[\"19th H2O\",\"查看详情\"]},\"33\":{\"h\":\"组件\"},\"34\":{\"c\":[\"前端\"]},\"35\":{\"c\":[\"Markdown\"]},\"36\":{\"h\":\"笔记\"},\"37\":{\"h\":\"6倍速普通方法\",\"t\":[\"bool isPrime(int n) { if (n == 2 || n == 3) return 1; if (n % 6 != 1 && n % 6 != 5) return 0; for (int i = 5;i * i <= n;i += 6) if (n % i == 0 || n % (i + 2) == 0) return 0; return n > 1; }\"]},\"38\":{\"h\":\"埃筛（时间换内存）\",\"t\":[\"const int N = 1001; int primes[N]; int cnt = 0; bool v[N];//注：v[1]=1 void as() { for (int i = 2; i < N; i++) { if (v[i]) { continue; } primes[cnt++] = i; for (int j = i+i; j < N; j += i) { v[j] = 1; } } }\"]},\"39\":{\"h\":\"欧拉筛（内存换时间）\",\"t\":[\"const int N = 1001; int primes[N]; int cnt = 0; bool v[N]; void as() { for (int i = 2; i <=N; i++) { if (!v[i]) { primes[cnt++] = i; } for (int j = 0; primes[j]*i <=N; j++) { v[i*primes[j]] = true; if (i % primes[j] == 0) { break; } } } }\"]},\"40\":{\"h\":\"求余\",\"t\":[\"a+b ((a%mod)+(b%mod))%mod a*b 同上 a-b ((a%mod)-(b%mod)+mod)%mod//+mod防止出现负数 a能整除b时 (a/b)%mod=a%(b*mod)/b a不能整除b时(费马小定理) (a/b)%mod=a*(b^(mod-2)%mod)%mod\"]},\"41\":{\"h\":\"龟速乘（防止炸范围）\",\"t\":[\"ll low(ll a, ll b) { ll ans = 0; while (b) { if (b & 1) { ans = (ans + a) % mod; } a = (a + a) % mod; b >>= 1; } return ans; }\"]},\"42\":{\"h\":\"快速幂（防止超时）\",\"t\":[\"ll quick(ll a, ll b) { ll ans = 1; while (b) { if (b & 1) { ans = low(ans,a);//乘法套用龟速乘，防止炸范围，不套省时间 } a = low(a,a); b >>= 1; } return ans; }\"]},\"43\":{\"h\":\"矩阵快速幂\"},\"44\":{\"h\":\"最大公因数\",\"t\":[\"大数等于小数，小数等于余数(a为大数) ll gcd(ll a, ll b) { return (b? gcd( b, a%b) : a); }\"]},\"45\":{\"h\":\"最小公倍数\",\"t\":[\"最小公倍数×最大公约数=A×B ll lcm(ll a, ll b) { return t = a/gcd(a, b)*b; }\"]},\"46\":{\"h\":\"组合数（C（n,m））\",\"t\":[\"对点求版（数学原理建议版）\",\"ll C(ll n, ll m) { if (m > n) { return 0; } ll up = 1, down = 1; for (ll i = 1; i <= m; i++) { up *= n - i + 1; down *= i; up %= mod; down %= mod; } return 费马(up, down); }\",\"预处理版\",\"fac[]//阶乘数组 inv[]//逆元数组 ！！！一定注意数组大小范围 void pre()//预处理函数 { fac[0] = inv[0] = 1;//一定记得处理首位 for (ll i = 1; i < MAXN; i++) { fac[i] = (fac[i - 1] * i) % mod; inv[i] = quick(fac[i], mod - 2); } } ll C(ll n, ll m) { if (m > n) { return 0; } return (fac[n]* inv[m] * inv[n - m] ) % mod;//为了方便观察省去了很多取模 }\"]},\"47\":{\"h\":\"排列数（A（n,m））\",\"t\":[\"ll A(ll n, ll m) { ll up = 1; if (m > n) return 0; for (int i = n-m+1; i <= n; i++) { up *= i; up %= mod; } return up; }\"]},\"48\":{\"h\":\"逆元\",\"t\":[\"逆元：一个数字被除时取模，等于乘以这个数在这个mod下的逆元（与mod互质时才存在）\",\"对点求\",\"quick(b,mod-2);\",\"线性求逆元\",\"inv[1]=1; for(int i=2;i<=n;i++) { inv[i]=mod-(mod/i)*inv[mod%i]%mod; cout<<inv[i]<<'\\\\n'; }\",\"ll f(ll x) { ll t = 1, f = n; while (t<=f) { ll mid = t + f >> 1; if (cnt[mid] < x) { t = mid + 1; } else { f = mid - 1; } } return t; } 若存在，则返回第一次出现的下标 若不存在，则返回大于这个数的第一个数字下标\",\"ll f(ll x) { ll t = 1, f = n; while (t<=f) { ll mid = t + f >> 1; if (cnt[mid] <= x) { t = mid + 1; } else { f = mid - 1; } } return f; } 若存在，则返回最后一次出现的下标 若不存在，则返回小于这个数的最后一个数字下标\",\"ll f(ll x) { ll t = 1, f = n; while (t<=f) { ll mid = t + f >> 1; if (cnt[mid] <= x) { t = mid + 1; } else { f = mid - 1; } } return t; } 返回大于这个数字的第一个数字的下标\",\"ll f(ll x) { ll t = 1, f = n; while (t<=f) { ll mid = t + f >> 1; if (cnt[mid] < x) { t = mid + 1; } else { f = mid - 1; } } return f; } 返回小于这个数字的第一个数字的下标\"]},\"49\":{\"h\":\"二分查找函数\",\"t\":[\"任何有序容器都可以使用\",\"lower_bound(x) STL:返回>=x的第一个元素的迭代器(没找到返回end（）) 数组：返回>=x的第一个元素下标（没找到返回0） upper_bound(x) STL:返回>=x的第一个元素的迭代器(没找到返回end（）) 数组：返回>=x的第一个元素下标（没找到返回0）\"]},\"50\":{\"h\":\"二进制枚举\",\"t\":[\"eg: 1 2 3 0 1 1 第二列1代表选取，0代表未选取 for (int i = 0; i < (1<<n); i++)//例如n为3，则需要选择0 0 0**0 0 1**0 1 0....1 1 1，即为000到111（2^4-1次） { int sum = 0; for (int j = 0; j < n; j++) { if ((1 << j) & i)//如当i选取1 0 1时，j==1时，sum加，j==2时，010&010==0，sum不加... { sum += a[j]; } } set.insert(sum);//去重 }\"]},\"51\":{\"h\":\"全排列\",\"t\":[\"即所有的可能性\",\"eg:123的全排列 123 132 213 231 312 321 有两种方法\",\"1.DFS（利：无序数组也可以放入，弊：出现重复数字时会输出重复数组，此时用set可以去重） void DFS(int x) { if (x == n + 1) { for (int i = 1; i <= n; i++) { cout << a[i]; } return; } set<int>s; for (int i = 1; i <= n; i++) { if (!v[i]&&s.find(v[i])==s.end()) { v[i] = 1;//判断该数字是否被选择过 s.insert(v[i]);//去重，保证不会讲重复数字排在同一位置 a[x] = i; DFS(x + 1); v[i] = 0; } } }\",\"2.函数（next_permutation(a,a+n)）(利：出现重复时不会重复输出，弊：&&一定要有序&&才可以排) do { for (int i = 0; i < 3; i++) { cout << a[i] << \\\" \\\\n\\\"[i == 2]; } } while (next_permutation(a, a + 3)); //让a自动排列出全排列（true），直到全输出（false）\"]},\"52\":{\"h\":\"10进制转k进制\",\"t\":[\"（1.可存字母2.可超long3.先do是为了防止出现0的情况（不进行循环）） string _10tok(ll n,int k) { string s = \\\"\\\"; do { if (n % k < 10) { s += (n % k) + '0'; } else { s += (n % k) + 'A' - 10; } n /= k; } while (n); reverse(s.begin(), s.end()); return s; }\"]},\"53\":{\"h\":\"k进制转10进制\",\"t\":[\"（可以边乘边取余） ll kto10(int k, string s) { ll n=0; int len = s.size(); for (int i = 0; i < len; i++) { n *= k; if (s[i] >= '0' && s[i] <= '9') { n += s[i] - '0'; } else { n += s[i] - 'A' + 10; } } return n; }\"]},\"54\":{\"h\":\"前置函数\"},\"55\":{\"h\":\"去前置0\",\"t\":[\"string _delete(string s) { for (int i = 0; i < s.size(); i++) { if (s[i] != '0') { return s.substr(i); } } return \\\"0\\\"; }\"]},\"56\":{\"h\":\"去除小数点\",\"t\":[\"string removed(string s) { for (int i = 0; i < s.size(); i++) { if (s[i] == '.') { return s.substr(0, i) + s.substr(i+1); } } return s; }\"]},\"57\":{\"h\":\"高精度加法\",\"t\":[\"string _plus(string a, string b)(限2个数大于0) { reverse(a.begin(), a.end()); reverse(b.begin(), b.end()); int len = max(a.size(), b.size()); vector<int>v(len+5); for (int i = 0; i < a.size(); i++) { v[i] += a[i] - '0'; } for (int i = 0; i < b.size(); i++) { v[i] += b[i] - '0'; } for (int i = 0; i < len; i++) { v[i + 1] += v[i] / 10; v[i] %= 10; } string sum; for (int i = 0; i <= len; i++) { sum += v[i] + '0'; }//加法等于len，减法不等，因为不会越减越大 reverse(sum.begin(), sum.end()); return _delete(sum); }\"]},\"58\":{\"h\":\"高精度减法\",\"t\":[\"string op = \\\"\\\"; if (a.size() < b.size() || a.size()==b.size()&&a < b) { op = \\\"-\\\"; swap(a, b); } string _sub(string a, string b) { reverse(a.begin(), a.end()); reverse(b.begin(), b.end()); int len = max(a.size(), b.size()); vector<int>v(len+5); for (int i = 0; i < a.size(); i++) { v[i] += a[i] - '0'; } for (int i = 0; i < b.size(); i++) { v[i] -= b[i] - '0'; } for (int i = 0; i < len; i++) { while (v[i] < 0) { v[i] += 10; v[i + 1]--; } } string sum; for (int i = 0; i < len; i++) { sum += v[i] + '0'; }//加法等于len，减法不等，因为不会越减越大 reverse(sum.begin(), sum.end()); return _delete(sum); }\"]},\"59\":{\"h\":\"高精度乘法\",\"t\":[\"string _mul(string a, string b)(限2个数大于0) { reverse(a.begin(), a.end()); reverse(b.begin(), b.end()); int len = len=a.size()+b.size(); vector<int>v(len+5); for (int i = 0; i < a.size(); i++) { for (int j = 0; j < b.size(); j++) { v[i+j] += (b[j] - '0')*(a[i]-'0'); } }//（len=a.size()+b.size()） string sum; for (int i = 0; i <= len; i++) { sum += v[i] + '0'; } reverse(sum.begin(), sum.end()); return _delete(sum); }\"]},\"60\":{\"h\":\"高精度除法\",\"t\":[\"string _mul(string a, string b)(限2个数大于0) { sum=\\\"\\\"; string res; for (int i = 0; i < a.size(); i++) { sum =remove(sum+a[i]); res+='0'; while (sum.size() > b.size() || sum.size() == b.size() && sum >=b) { sum=sub(sum, b); res[i]++; } } return remove(res); } 函数结束后 sum 就是余数\"]},\"61\":{\"h\":\"一维前缀和\",\"t\":[\"int a[N],b[N];//a原数组，b前缀和数组 int main() { cin>>n>>m; for(int i=1;i<=n;i++) { cin>>a[i]; b[i]=b[i-1]+a[i]; } int l,r; while(m--) { cin>>l>>r; cout<<b[r]-b[l-1]；//输出区间和 }\"]},\"62\":{\"h\":\"二维前缀和\",\"t\":[\"memset(s, 0, sizeof(s)); for (int i = 0; i < n; i++) { ll a, b; cin >> a >> b; s[a][b] += a * b; } for (int i = 1; i <= 1000; i++) { for (int j = 1; j <= 1000; j++) { s[i][j] += s[i][j - 1] + s[i - 1][j] - s[i - 1][j - 1];//构造：点原本自带的数字加上单边减1减去双边减1 } } while (q--) { int a1, b1, a2, b2;//1为小边,2为大边 cin >> a1 >> b1 >> a2 >> b2; cout << s[a2][b2] - s[a2][b1 - 1] - s[a1 - 1][b2] + s[a1 - 1][b1 - 1] << '\\\\n';//查询：就把构造反过来，一大边一小边 }\"]},\"63\":{\"h\":\"一维差分\",\"t\":[\"void insert(int l,int r,int c)//b数组是前缀和数组，注意使用差分则不能区间查询 { b[l]+=c; b[r+1]-=c; }\"]},\"64\":{\"h\":\"二维差分\",\"t\":[\"void insert(int l,int r,int c)//b数组是前缀和数组，注意使用差分则不能区间查询 { b[l]+=c; b[r+1]-=c; } //查询 b[i][j]=b[i-1][j]+b[i][j-1]-b[i-1][j-1];\",\"int a[N];//原数组 int b[N];//树状数组 int lowbit(int x) { return x & -x; } void add(int x, int k)//输入/更新 { for (int i = x; i <N; i += lowbit(i)) { b[i] += k; } } int count(int r,int l)//求和/查询 { int sum = 0; for (int i = r; i; i -= lowbit(i)) { sum += b[i]; } for (int i = l - 1; i; i -= lowbit(i)) { sum -= b[i]; } return sum; }\",\"具体的看群里文件\"]},\"65\":{\"h\":\"小tip：\",\"t\":[\"关于map的边遍历边删除（先加入一个大于数据范围的键值（防空），最后在将其删除）\",\"mp[1000000009] = 1; auto t = mp.begin();//上一个迭代器 bool o = 0; for (auto i = mp.begin(); i != mp.end(); i++) { if (o) { mp.erase(t); o = 0; } f ((*i).second < b)//不满足条件的，将在下一次删除 { o = 1; t = i; } } mp.erase(1000000009); \",\"一定注意看清x轴和y轴！！！\",\"int sx, sy, ex, ey;//起点坐标与终点坐标 char mp[25][25]; int dir[4][2] = { 0,1,0,-1,1,0,-1,0 };//方向数组 bool v[25][25]; struct Point { int x, y，s;//坐标和步数 }; int BFS() { Point begin = { sx,sy,0 }; v[sx][sy] = 1; queue<Point>q; q.push(begin); while (q.size()) { auto front = q.front(); q.pop(); if (front.x == ex && front.y == ey) { return front.s; } for (int i = 0; i < 4; i++)//四个方向 { int nx = front.x + dir[i][0]; int ny = front.y + dir[i][1]; if (mp[nx][ny] != '#' && !v[nx][ny]) { q.push({ nx,ny,front.s + c }); v[nx][ny] = 1; } } } }\",\"int fa[6000]; int rank_[6000]; int size[6000]; int find(int x)//正常查找父节点 { return x == fa[x] ? x : find(fa[x]); } int find(int x)//压缩路径查找父节点 { return x == fa[x] ? x : (fa[x] = find(fa[x])); } for (int i = 0; i < 5700; i++)//正常初始化 { fa[i] = i; } void merge(int i, int j)//正常合并 { fa[find(i)] = find(j); } void merge(int i, int j)//按照秩(树高)初始化 { fa[i] = i; rank[i] = 1; } void rank_merge(int i, int j)//按照秩(树高)合并 { int x = find(i), y = find(j); if (rank_[x] <= rank_[y]) fa[x] = y; else fa[y] = x; if (rank_[x] == rank_[y] && x != y) { rank_[y]++; } } void rank_merge(int i, int j)//按照秩(节点数)合并 { int x = find(i), y = find(j); if (x == y) return; if(size[x]>size(y)) swap(x,y); fa[x]=y; size[y]+=size[x]; }\",\"1.奇加偶减\",\"求 100以内 2 3 5有多少的倍数，（算出sum+=2，3，5的倍数，sum-=【2，3】，【2，5】【3，5】的倍数，sum+=【2，3，5】的倍数）【】为lcm（最小公倍数）\",\"2.正难则反\"]},\"66\":{\"h\":\"记忆化搜索\",\"t\":[\"找到已经查询过的数字\"]},\"67\":{\"h\":\"线性dp\"},\"68\":{\"h\":\"求最长上升子序列\",\"t\":[\"memset(b, 0x3f, sizeof(b));//先赋 for (int i = 1; i <= n; i++) { cin >> a[i]; } int len = 0; for (int i = 1; i <= n; i++) { int x = lower_bound(b+1, b + len+1, a[i])-b;//二分找到合适的位置用更小的替换 b[x] = a[i]; len = max(len, x); }\"]},\"69\":{\"h\":\"01背包（两种状态的dp）\",\"t\":[\"有N件物品和一个容量为M的背包。\",\"已知第i件物品的重量是wi，价值是vi\",\"思考：物品作为阶段，容量作为状态 得出\",\"在这个重量时，拿与不拿的最佳状态\",\"int w[1002],v[1002];//weight value int dp[1002][1002];//num weight = value int main() { int m, n; cin >> m >> n; for (int i = 1; i <= n; i++) { int a, b; cin >> a >> b; w[i] = a; v[i] = b; } for (int i = 1; i <= n; i++)//第几个物品 { for (int j = 1; j <=m; j++)//在这个空间下的最大价值 { if (j >= w[i])//拿的下就拿 { dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - w[i]] + v[i]); } else//拿不下就跳 { dp[i][j] = dp[i - 1][j]; } } } cout << dp[n][m]; return 0; }//留下很多信息，方案题适用 \"]},\"70\":{\"h\":\"压缩成二维\",\"t\":[\"每一行的dp，只与其上一行的前面的数据相关，如果不需要前面每一的数据，则可以优化一下空间，可以用两个数组交替保存每一行的信息\",\"int w[1002],v[1002];//weight value int dp[2][1002];//num weight = value int main() { int m, n; cin >> m >> n; for (int i = 1; i <= n; i++) { int a, b; cin >> a >> b; w[i] = a; v[i] = b; } for (int i = 1; i <= n; i++)//第几个物品 { for (int j = 1; j <= m; j++)//在这个空间下的最大价值 { if (j >= w[i])//拿的下就拿 { dp[i & 1][j] = max(dp[(i - 1) & 1][j], dp[(i - 1) & 1][j - w[i]] + v[i]); } else//拿不下就跳 { dp[i & 1][j] = dp[(i - 1) & 1][j]; } } } cout << dp[n&1][m]; return 0; }\"]},\"71\":{\"h\":\"压缩成一维\",\"t\":[\"（前提是）每一行的dp，只与其上一行的前面的数据相关，如果不需要前面每一的数据，则可以优化一下空间，因为是前面的数据，直接用会被覆盖，所以要反向dp，相当于在同一行操作，后面的是新的，前面的是旧的。\",\"int w[1002],v[1002];//weight value int dp[1002];//weight = value int main() { int m, n; cin >> m >> n; for (int i = 1; i <= n; i++) { int a, b; cin >> a >> b; w[i] = a; v[i] = b; } for (int i = 1; i <= n; i++)//第几个物品 { for (int j = m; j >= w[i]; j--)//在这个空间下的最大价值 { dp[j] = max(dp[j], dp[j - w[i]] + v[i]); } } cout << dp[m]; return 0; }\"]},\"72\":{\"h\":\"多重01背包\",\"t\":[\"有N件物品和一个容量为M的背包。\",\"已知第i件物品的重量是wi，价值是vi,一个物品可以选k次\",\"int w[1002],v[1002];//weight value int dp[1002];//weight = value int main() { int m, n; cin >> m >> n; int pos=1; for (int i = 1; i <= n; i++) { int a, b,c; cin >> a >> b>>c; w[i] = a; v[i] = b; for(int j=1;j<=c;j*=2)//1 2 4 8...一定可以组成c以内的所有的数字(二进制拆分) { w[pos]=a*j; v[pos++]=b*j; c-=j; } if(c!=0) { w[pos]=a*c; v[pos++]=b*c; } } for (int i = 1; i < pow; i++)//第几个物品(注意是pos不是N) { for (int j = m; j >= w[i]; j--)//在这个空间下的最大价值 { dp[j] = max(dp[j], dp[j - w[i]] + v[i]); } } cout << dp[m]; return 0; }\"]},\"73\":{\"h\":\"完全01背包\",\"t\":[\"有N件物品和一个容量为M的背包。\",\"已知第i件物品的重量是wi，价值是vi,一个物品可以选无数次\",\"思考：01背包压缩成一维时，为了避免重复选择而反向dp，所避免的重复选择不正是完全背包\",\"int w[1002],v[1002];//weight value int dp[1002];//weight = value int main() { int m, n; cin >> m >> n; for (int i = 1; i <= n; i++) { int a, b; cin >> a >> b; w[i] = a; v[i] = b; } for (int i = 1; i <= n; i++)//第几个物品 { for (int j = w[i]; j <= m; j++)//在这个空间下的最大价值 { dp[j] = max(dp[j], dp[j - w[i]] + v[i]); } } cout << dp[m]; return 0; }\"]},\"74\":{\"h\":\"混合01背包\",\"t\":[\"有N件物品和一个容量为M的背包。\",\"已知第i件物品的重量是wi，价值是vi,一个物品可以选k次，k为0则可以无限选取\",\"int w[1002],v[1002]，k[1002];//weight value cnt int dp[1002];//weight = value int main() { int m, n; cin >> m >> n; int pos = 1; for (int i = 1; i <= n; i++) { int a, b, c; cin >> a >> b >> c; if (c == 0) { w[pos] = a ; k[pos] = c; v[pos++] = b; } for (int j = 1; c >= j; j *= 2) { w[pos] = a * j; v[pos] = b * j; k[pos++] = 1; c -= j; } if (c != 0) { w[pos] = a * c; k[pos] = 1; v[pos++] = b * c; } } for (int i = 1; i < pos; i++)//第几个物品 { if (k[i])//多重 { for (int j = m; j >= w[i]; j--)//在这个空间下的最大价值 { dp[j] = max(dp[j], dp[j - w[i]] + v[i]); } } else//完全 { for (int j = w[i]; j <= m; j++)//在这个空间下的最大价值 { dp[j] = max(dp[j], dp[j - w[i]] + v[i]); } } } cout << dp[m]; return 0; }\"]},\"75\":{\"h\":\"分组01背包\",\"t\":[\"有N件物品和一个容量为M的背包。\",\"已知第i件物品的重量是wi，价值是vi，所属组号为ki（组号相同的物品至多选取一个）\",\"核心是将重量与物品位置对换，实现重量为阶段，物品为状态，就可以得出\",\"在考虑拿不拿这个物品时的，拿与不拿的最佳重量下的状态\",\"int m, n; cin >> m >> n; for (int i = 1; i <= n; i++) { int a, b, c; cin >> a >> b >> c; w[c][i] = a; v[c][i] = b; } for (int i = 1; i <= 100; i++)//组号 { for (int j = m; j >= 0; j--)//重量 { for (int k = 1; k <= n; k++)//物品 { if (w[i][k] <= j) { dp[j] = max(dp[j], dp[j - w[i][k]] + v[i][k]); } } } } cout << dp[m];\"]},\"76\":{\"h\":\"二维01背包\",\"t\":[\"有N件物品和一个容量为M，容积为V的卡车。\",\"已知第i件物品的重量是wi，体积是vi,价值是vi\",\"求解如何选取物品才能使装入卡车的物品价值总和最大。\",\"int w[102], v[102],t[102];//weight value volume int dp[1002][1002]; int x,y,z; cin >> x>>y>>z; for (int i = 1; i <= x; i++) { int a; cin >> a ; w[i] = a; } for (int i = 1; i <= x; i++) { int a; cin >> a; t[i] = a; } for (int i = 1; i <= x; i++) { int a; cin >> a; v[i] = a; } for (int i = 1; i <= x; i++) { for (int j = y; j >= 0; j--) { for (int k = z; k >= 0; k--) { if (w[i] <= j && t[i] <= k) { dp[j][k] = max(dp[j][k], dp[j - w[i]][k - t[i]] + v[i]); } } } } cout << dp[y][z];\"]},\"77\":{\"h\":\"01背包问题求具体方案\",\"t\":[\"有N件物品和一个容量为M的背包。\",\"已知第i件物品的重量是wi，价值是vi\",\"求解如何选取物品才能使装入背包的物品价值总和最大。\",\"（物品从N选到1）\",\"int m,n; cin >> m>>n; for (int i = 1; i <= n; i++) { int a, b; cin >> a >> b; w[i] = a; v[i] = b; } for (int i = n; i >= 1; i--) { for (int j = 1; j <= m; j++) { if (j >= w[i]) { dp[i][j] = max(dp[i + 1][j], dp[i + 1][j - w[i]]+v[i]); } else { dp[i][j] = dp[i + 1][j]; } } } int x = m; int t = 0; for (int i = 1; i <= n; i++) { if (x >= w[i] && dp[i][x] == dp[i + 1][x - w[i]]+v[i]) { if (t++)cout << \\\" \\\"; cout << i; x -= w[i]; } }\"]},\"78\":{\"h\":\"容量很大的01背包问题\",\"t\":[\"有N件物品和一个容量为M的背包。\",\"已知第i件物品的重量是wi，价值是vi（1≤M≤1e9，1≤N≤100）\",\"(翻转dp的含义，在这个价值下的最小重量，最后一个值小于容量的dp则为答案)\",\"int m, n; cin >> m >> n; memset(dp, 0x3f, sizeof dp); dp[0] = 0; for (int i = 1; i <= n; i++) { cin >> w[i] >> v[i]; } int a = 0; for (int i = 1; i <= n; i++) { for (int j = MAX_VALUE; j >=v[i]; j--) { dp[j] = min(dp[j], dp[j - v[i]] + w[i]); } } for (int i = 0; i <= MAX_VALUE; i++) { if (dp[i] <= m) a = max(i, a); } cout << a;\",\"堆的前提是必须是完全二叉树（只允许树的最后一排不为满，且顺序从左往右，中间不能空缺）\",\"大根堆：父元素节点大于子节点元素\",\"小根堆：子节点元素大于父节点元素\",\"节点下标为i，则：左子节点下标为2i+1，右子节点下标为2i+2\",\"下沉：如在大根堆中，有一个节点破坏了堆序性，那么每次都较大的子节点交换，这个节点就会下沉到对应的位置（Ologn）\",\"上浮：如在小根堆中，有一个节点破坏了堆序性，那么每次父节点大于这个节点，则交换，这个节点会上浮到对应的位置（用于插入，O（logn））\",\"自顶向下建堆法：每次插入，对每次插入的元素进行上浮\",\"自下而上建堆法：全部插入，从下往上进行下沉操作\",\"优先队列：利用小根堆，每次弹出父节点（即最小节点），然后把最后一个根节点放在弹出父节点的位置，然后进行下沉\"]},\"79\":{\"h\":\"快速排序\",\"t\":[\"void sort_(int a[], int low, int high)//low是最低位的下标，high是最高位数的下标（a.size()-1） { if (low >= high) return; int i = low - 1; int j = high + 1; int key = a[i + j >> 1]; while (i < j) { do i++; while (a[i] < key); do j--; while (a[j] > key); if (i < j)swap(a[i], a[j]); } sort_(a, low, j); sort_(a, j + 1, high); }\"]},\"80\":{\"h\":\"归并排序\",\"t\":[\"void merge(int arr[], int tempArr[],int left,int mid,int right) { int l_pos = left; int r_pos = mid+1; int pos = left;//答案数组的下标 while (l_pos <= mid && r_pos <= right) { if (arr[l_pos] < arr[r_pos]) tempArr[pos++] = arr[l_pos++]; else tempArr[pos++] = arr[r_pos++]; } while (l_pos <= mid)//剩余 { tempArr[pos++] = arr[l_pos++]; } while (r_pos <= right)//剩余 { tempArr[pos++] = arr[r_pos++]; } //临时数组的数组传入原数组 while (left <= right) { arr[left] = tempArr[left]; left++; } } void msort(int arr[], int tempArr[], int left,int right) { if (left < right)//等于的时候结束 { int mid = (left + right) / 2; msort(arr,tempArr,left,mid); msort(arr,tempArr, mid+1, right); //完成划分后进入合并 merge(arr, tempArr, left, mid, right); } }\"]},\"81\":{\"h\":\"Dijkstra\",\"t\":[\"vector<int>Dijkstra(int n,int stay) { vector<int>dis(n, 0x3f3f3f); vector<bool>vis(n, 0); dis[stay] = 0; priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> q; q.push({ 0,stay }); while (q.size()) { int point = q.top().second; int d = q.top().first; q.pop(); if (vis[point]) continue; for (int i = 0; i < n; i++) { int now_dis = d+mp[point][i]; if (mp[point][i]!=0&&!vis[i]) { if (now_dis < dis[i]) { dis[i] = now_dis; q.push({ now_dis ,i }); } } } } return dis; }\"]},\"82\":{\"c\":[\"算法\"]},\"83\":{\"c\":[\"算法笔记\"]},\"84\":{\"h\":\"页面配置\",\"t\":[\"more 注释之前的内容被视为文章摘要。\"]},\"85\":{\"h\":\"页面标题\",\"t\":[\"The first H1 title in Markdown will be regarded as page title.\",\"Markdown 中的第一个 H1 标题会被视为页面标题。\",\"你可以在 Markdown 的 Frontmatter 中设置页面标题。\",\"--- title: 页面标题 ---\"]},\"86\":{\"h\":\"页面信息\",\"t\":[\"你可以在 Markdown 的 Frontmatter 中设置页面信息。\",\"作者设置为 Ms.Hope。\",\"写作日期为 2020 年 1 月 1 日\",\"分类为 “使用指南”\",\"标签为 “页面配置” 和 “使用指南”\"]},\"87\":{\"h\":\"页面内容\",\"t\":[\"你可以自由在这里书写你的 Markdown。\",\"图片引入\",\"你可以将图片和 Markdown 文件放置在一起使用相对路径进行引用。\",\"对于 .vuepress/public 文件夹的图片，请使用绝对链接 / 进行引用。\"]},\"88\":{\"h\":\"组件\",\"t\":[\"每个 Markdown 页面都会被转换为一个 Vue 组件，这意味着你可以在 Markdown 中使用 Vue 语法：\",\"{{ 1 + 1 }}\",\"{{ i }}\",\"你也可以创建并引入你自己的组件。\"]},\"89\":{\"c\":[\"使用指南\"]},\"90\":{\"c\":[\"页面配置\",\"使用指南\"]},\"91\":{\"h\":\"樱桃\"},\"92\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"93\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"94\":{\"c\":[\"樱桃\"]},\"95\":{\"c\":[\"红\",\"小\",\"圆\"]},\"96\":{\"h\":\"火龙果\"},\"97\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"98\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"99\":{\"c\":[\"火龙果\",\"水果\"]},\"100\":{\"c\":[\"红\",\"大\"]},\"101\":{\"h\":\"草莓\"},\"102\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"103\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"104\":{\"c\":[\"水果\",\"草莓\"]},\"105\":{\"c\":[\"红\",\"小\"]},\"106\":{\"h\":\"番茄\"},\"107\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"108\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"109\":{\"c\":[\"蔬菜\"]},\"110\":{\"c\":[\"红\",\"圆\"]},\"111\":{\"h\":\"香蕉 1\"},\"112\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"113\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"114\":{\"c\":[\"香蕉\",\"水果\"]},\"115\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"116\":{\"h\":\"香蕉 2\",\"t\":[\"一个被数字 10 星标了的香蕉文章。\"]},\"117\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"118\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"119\":{\"c\":[\"香蕉\",\"水果\"]},\"120\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"121\":{\"h\":\"香蕉 3\"},\"122\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"123\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"124\":{\"c\":[\"香蕉\"]},\"125\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"126\":{\"h\":\"香蕉 4\"},\"127\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"128\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"129\":{\"c\":[\"香蕉\"]},\"130\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"131\":{\"h\":\"苹果 1\"},\"132\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"133\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"134\":{\"c\":[\"苹果\"]},\"135\":{\"c\":[\"红\",\"大\",\"圆\"]},\"136\":{\"h\":\"苹果 2\",\"t\":[\"一个被星标了的苹果文章。\"]},\"137\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"138\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"139\":{\"c\":[\"苹果\"]},\"140\":{\"c\":[\"红\",\"大\",\"圆\"]},\"141\":{\"h\":\"苹果 3\"},\"142\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"143\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"144\":{\"c\":[\"苹果\",\"水果\"]},\"145\":{\"c\":[\"红\",\"大\",\"圆\"]},\"146\":{\"h\":\"苹果 4\"},\"147\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"148\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"149\":{\"c\":[\"苹果\",\"水果\"]},\"150\":{\"c\":[\"红\",\"大\",\"圆\"]},\"151\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"152\":{\"h\":\"Posts\"},\"153\":{\"h\":\"Banana\"},\"154\":{\"h\":\"Apple\"}},\"dirtCount\":0,\"index\":[[\"苹果\",{\"0\":{\"131\":1,\"136\":1,\"141\":1,\"146\":1},\"2\":{\"134\":1,\"139\":1,\"144\":1,\"149\":1}}],[\"星标了的香蕉文章\",{\"1\":{\"116\":1}}],[\"长\",{\"2\":{\"115\":1,\"120\":1,\"125\":1,\"130\":1}}],[\"弯曲的\",{\"2\":{\"115\":1,\"120\":1,\"125\":1,\"130\":1}}],[\"黄\",{\"2\":{\"115\":1,\"120\":1,\"125\":1,\"130\":1}}],[\"香蕉\",{\"0\":{\"111\":1,\"116\":1,\"121\":1,\"126\":1},\"2\":{\"114\":1,\"119\":1,\"124\":1,\"129\":1}}],[\"蔬菜\",{\"2\":{\"109\":1}}],[\"番茄\",{\"0\":{\"106\":1}}],[\"草莓\",{\"0\":{\"101\":1},\"2\":{\"104\":1}}],[\"水果\",{\"2\":{\"99\":1,\"104\":1,\"114\":1,\"119\":1,\"144\":1,\"149\":1}}],[\"圆\",{\"2\":{\"95\":1,\"110\":1,\"135\":1,\"140\":1,\"145\":1,\"150\":1}}],[\"樱桃\",{\"0\":{\"91\":1},\"2\":{\"94\":1}}],[\"进行引用\",{\"1\":{\"87\":1}}],[\"图片引入\",{\"1\":{\"87\":1}}],[\"图片增强\",{\"0\":{\"31\":1}}],[\"标签为\",{\"1\":{\"86\":1}}],[\"标题\",{\"0\":{\"92\":1,\"93\":1,\"97\":1,\"98\":1,\"102\":1,\"103\":1,\"107\":1,\"108\":1,\"112\":1,\"113\":1,\"117\":1,\"118\":1,\"122\":1,\"123\":1,\"127\":1,\"128\":1,\"132\":1,\"133\":1,\"137\":1,\"138\":1,\"142\":1,\"143\":1,\"147\":1,\"148\":1}}],[\"标题会被视为页面标题\",{\"1\":{\"85\":1}}],[\"标题和页面信息\",{\"1\":{\"17\":1}}],[\"分类为\",{\"1\":{\"86\":1}}],[\"分组01背包\",{\"0\":{\"75\":1}}],[\"日\",{\"1\":{\"86\":1}}],[\"月\",{\"1\":{\"86\":1}}],[\"年\",{\"1\":{\"86\":1}}],[\"写作日期为\",{\"1\":{\"86\":1}}],[\"作者设置为\",{\"1\":{\"86\":1}}],[\"的\",{\"1\":{\"85\":1,\"86\":1}}],[\"的倍数\",{\"1\":{\"65\":2}}],[\"算法笔记\",{\"2\":{\"83\":1}}],[\"算法\",{\"2\":{\"82\":1}}],[\"算出sum+=2\",{\"1\":{\"65\":1}}],[\"greater<pair<int\",{\"1\":{\"81\":1}}],[\"gcd\",{\"1\":{\"44\":2,\"45\":1}}],[\"完成划分后进入合并\",{\"1\":{\"80\":1}}],[\"完全\",{\"1\":{\"74\":1}}],[\"完全01背包\",{\"0\":{\"73\":1}}],[\"等于的时候结束\",{\"1\":{\"80\":1}}],[\"等于乘以这个数在这个mod下的逆元\",{\"1\":{\"48\":1}}],[\"临时数组的数组传入原数组\",{\"1\":{\"80\":1}}],[\"剩余\",{\"1\":{\"80\":2}}],[\"答案数组的下标\",{\"1\":{\"80\":1}}],[\"归并排序\",{\"0\":{\"80\":1}}],[\"快速排序\",{\"0\":{\"79\":1}}],[\"快速幂\",{\"0\":{\"42\":1}}],[\"然后进行下沉\",{\"1\":{\"78\":1}}],[\"然后把最后一个根节点放在弹出父节点的位置\",{\"1\":{\"78\":1}}],[\"优先队列\",{\"1\":{\"78\":1}}],[\"从下往上进行下沉操作\",{\"1\":{\"78\":1}}],[\"自下而上建堆法\",{\"1\":{\"78\":1}}],[\"自顶向下建堆法\",{\"1\":{\"78\":1}}],[\"每个\",{\"1\":{\"88\":1}}],[\"每次弹出父节点\",{\"1\":{\"78\":1}}],[\"每次插入\",{\"1\":{\"78\":1}}],[\"每一行的dp\",{\"1\":{\"70\":1,\"71\":1}}],[\"用于插入\",{\"1\":{\"78\":1}}],[\"那么每次父节点大于这个节点\",{\"1\":{\"78\":1}}],[\"那么每次都较大的子节点交换\",{\"1\":{\"78\":1}}],[\"这里是内容\",{\"1\":{\"92\":1,\"93\":1,\"97\":1,\"98\":1,\"102\":1,\"103\":1,\"107\":1,\"108\":1,\"112\":1,\"113\":1,\"117\":1,\"118\":1,\"122\":1,\"123\":1,\"127\":1,\"128\":1,\"132\":1,\"133\":1,\"137\":1,\"138\":1,\"142\":1,\"143\":1,\"147\":1,\"148\":1}}],[\"这意味着你可以在\",{\"1\":{\"88\":1}}],[\"这个节点会上浮到对应的位置\",{\"1\":{\"78\":1}}],[\"这个节点就会下沉到对应的位置\",{\"1\":{\"78\":1}}],[\"这是一个博客主页的案例\",{\"1\":{\"0\":1}}],[\"下沉\",{\"1\":{\"78\":1}}],[\"下一篇\",{\"1\":{\"14\":1}}],[\"右子节点下标为2i+2\",{\"1\":{\"78\":1}}],[\"左子节点下标为2i+1\",{\"1\":{\"78\":1}}],[\"节点下标为i\",{\"1\":{\"78\":1}}],[\"节点数\",{\"1\":{\"65\":1}}],[\"子节点元素大于父节点元素\",{\"1\":{\"78\":1}}],[\"父元素节点大于子节点元素\",{\"1\":{\"78\":1}}],[\"大\",{\"2\":{\"100\":1,\"135\":1,\"140\":1,\"145\":1,\"150\":1}}],[\"大根堆\",{\"1\":{\"78\":1}}],[\"大数等于小数\",{\"1\":{\"44\":1}}],[\"且顺序从左往右\",{\"1\":{\"78\":1}}],[\"只允许树的最后一排不为满\",{\"1\":{\"78\":1}}],[\"只与其上一行的前面的数据相关\",{\"1\":{\"70\":1,\"71\":1}}],[\"堆的前提是必须是完全二叉树\",{\"1\":{\"78\":1}}],[\"翻转dp的含义\",{\"1\":{\"78\":1}}],[\"z\",{\"1\":{\"76\":3}}],[\"体积是vi\",{\"1\":{\"76\":1}}],[\"容量很大的01背包问题\",{\"0\":{\"78\":1}}],[\"容量作为状态\",{\"1\":{\"69\":1}}],[\"容积为v的卡车\",{\"1\":{\"76\":1}}],[\"重量\",{\"1\":{\"75\":1}}],[\"物品从n选到1\",{\"1\":{\"77\":1}}],[\"物品\",{\"1\":{\"75\":1}}],[\"物品为状态\",{\"1\":{\"75\":1}}],[\"物品作为阶段\",{\"1\":{\"69\":1}}],[\"实现重量为阶段\",{\"1\":{\"75\":1}}],[\"核心是将重量与物品位置对换\",{\"1\":{\"75\":1}}],[\"多重\",{\"1\":{\"74\":1}}],[\"多重01背包\",{\"0\":{\"72\":1}}],[\"混合01背包\",{\"0\":{\"74\":1}}],[\"所属组号为ki\",{\"1\":{\"75\":1}}],[\"所避免的重复选择不正是完全背包\",{\"1\":{\"73\":1}}],[\"所以要反向dp\",{\"1\":{\"71\":1}}],[\"8\",{\"1\":{\"72\":1}}],[\"后面的是新的\",{\"1\":{\"71\":1}}],[\"相当于在同一行操作\",{\"1\":{\"71\":1}}],[\"相关配置文档请见\",{\"1\":{\"0\":1}}],[\"直接用会被覆盖\",{\"1\":{\"71\":1}}],[\"直到全输出\",{\"1\":{\"51\":1}}],[\"压缩成一维\",{\"0\":{\"71\":1}}],[\"压缩成二维\",{\"0\":{\"70\":1}}],[\"压缩路径查找父节点\",{\"1\":{\"65\":1}}],[\"方案题适用\",{\"1\":{\"69\":1}}],[\"方向数组\",{\"1\":{\"65\":1}}],[\"留下很多信息\",{\"1\":{\"69\":1}}],[\"拿与不拿的最佳重量下的状态\",{\"1\":{\"75\":1}}],[\"拿与不拿的最佳状态\",{\"1\":{\"69\":1}}],[\"拿不下就跳\",{\"1\":{\"69\":1,\"70\":1}}],[\"拿的下就拿\",{\"1\":{\"69\":1,\"70\":1}}],[\"will\",{\"1\":{\"85\":1}}],[\"weight\",{\"1\":{\"69\":2,\"70\":2,\"71\":2,\"72\":2,\"73\":2,\"74\":2,\"76\":1}}],[\"w\",{\"1\":{\"69\":4,\"70\":4,\"71\":4,\"72\":6,\"73\":4,\"74\":8,\"75\":3,\"76\":4,\"77\":6,\"78\":2}}],[\"while\",{\"1\":{\"41\":1,\"42\":1,\"48\":4,\"51\":1,\"52\":1,\"58\":1,\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"79\":3,\"80\":4,\"81\":1}}],[\"在考虑拿不拿这个物品时的\",{\"1\":{\"75\":1}}],[\"在这个价值下的最小重量\",{\"1\":{\"78\":1}}],[\"在这个空间下的最大价值\",{\"1\":{\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":2}}],[\"在这个重量时\",{\"1\":{\"69\":1}}],[\"在页面禁用功能与布局\",{\"1\":{\"14\":1}}],[\"得出\",{\"1\":{\"69\":1}}],[\"思考\",{\"1\":{\"69\":1,\"73\":1}}],[\"价值是vi\",{\"1\":{\"69\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1}}],[\"已知第i件物品的重量是wi\",{\"1\":{\"69\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1}}],[\"有一个节点破坏了堆序性\",{\"1\":{\"78\":2}}],[\"有n件物品和一个容量为m\",{\"1\":{\"76\":1}}],[\"有n件物品和一个容量为m的背包\",{\"1\":{\"69\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"77\":1,\"78\":1}}],[\"有两种方法\",{\"1\":{\"51\":1}}],[\"两种状态的dp\",{\"0\":{\"69\":1}}],[\"线性dp\",{\"0\":{\"67\":1}}],[\"线性求逆元\",{\"1\":{\"48\":1}}],[\"找到已经查询过的数字\",{\"1\":{\"66\":1}}],[\"记忆化搜索\",{\"0\":{\"66\":1}}],[\"正难则反\",{\"1\":{\"65\":1}}],[\"正常合并\",{\"1\":{\"65\":1}}],[\"正常初始化\",{\"1\":{\"65\":1}}],[\"正常查找父节点\",{\"1\":{\"65\":1}}],[\"奇加偶减\",{\"1\":{\"65\":1}}],[\"合并\",{\"1\":{\"65\":2}}],[\"初始化\",{\"1\":{\"65\":1}}],[\"树高\",{\"1\":{\"65\":2}}],[\"树状数组\",{\"1\":{\"64\":1}}],[\"按照秩\",{\"1\":{\"65\":3}}],[\"四个方向\",{\"1\":{\"65\":1}}],[\"坐标和步数\",{\"1\":{\"65\":1}}],[\"404\",{\"1\":{\"151\":1}}],[\"4\",{\"0\":{\"126\":1,\"146\":1},\"1\":{\"65\":2,\"72\":1}}],[\"起点坐标与终点坐标\",{\"1\":{\"65\":1}}],[\"将在下一次删除\",{\"1\":{\"65\":1}}],[\"防空\",{\"1\":{\"65\":1}}],[\"防止超时\",{\"0\":{\"42\":1}}],[\"防止炸范围\",{\"0\":{\"41\":1},\"1\":{\"42\":1}}],[\"先赋\",{\"1\":{\"68\":1}}],[\"先加入一个大于数据范围的键值\",{\"1\":{\"65\":1}}],[\"先do是为了防止出现0的情况\",{\"1\":{\"52\":1}}],[\"关于map的边遍历边删除\",{\"1\":{\"65\":1}}],[\"关于这些扩展\",{\"1\":{\"24\":1}}],[\"小\",{\"2\":{\"95\":1,\"105\":1}}],[\"小根堆\",{\"1\":{\"78\":1}}],[\"小tip\",{\"0\":{\"65\":1}}],[\"小数等于余数\",{\"1\":{\"44\":1}}],[\"具体的看群里文件\",{\"1\":{\"64\":1}}],[\"求解如何选取物品才能使装入背包的物品价值总和最大\",{\"1\":{\"77\":1}}],[\"求解如何选取物品才能使装入卡车的物品价值总和最大\",{\"1\":{\"76\":1}}],[\"求最长上升子序列\",{\"0\":{\"68\":1}}],[\"求\",{\"1\":{\"65\":1}}],[\"求和\",{\"1\":{\"64\":1}}],[\"求余\",{\"0\":{\"40\":1}}],[\"更新\",{\"1\":{\"64\":1}}],[\"更新时间等页面元信息\",{\"1\":{\"17\":1}}],[\"更新时间\",{\"1\":{\"14\":1}}],[\"输入\",{\"1\":{\"64\":1}}],[\"输出区间和\",{\"1\":{\"61\":1}}],[\"原数组\",{\"1\":{\"64\":1}}],[\"就可以得出\",{\"1\":{\"75\":1}}],[\"就把构造反过来\",{\"1\":{\"62\":1}}],[\"就是余数\",{\"1\":{\"60\":1}}],[\"查询\",{\"1\":{\"62\":1,\"64\":2}}],[\"查看详情\",{\"1\":{\"26\":1,\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1}}],[\"queue<pair<int\",{\"1\":{\"81\":1}}],[\"queue<point>q\",{\"1\":{\"65\":1}}],[\"quick\",{\"1\":{\"42\":1,\"46\":1,\"48\":1}}],[\"q\",{\"1\":{\"62\":1,\"65\":5,\"81\":7}}],[\"点原本自带的数字加上单边减1减去双边减1\",{\"1\":{\"62\":1}}],[\"构造\",{\"1\":{\"62\":1}}],[\"ologn\",{\"1\":{\"78\":1}}],[\"o\",{\"1\":{\"65\":4,\"78\":1}}],[\"op\",{\"1\":{\"58\":2}}],[\"omega^i\",{\"1\":{\"29\":1}}],[\"omega^r\",{\"1\":{\"29\":1}}],[\"omega\",{\"1\":{\"29\":4}}],[\"高精度除法\",{\"0\":{\"60\":1}}],[\"高精度乘法\",{\"0\":{\"59\":1}}],[\"高精度减法\",{\"0\":{\"58\":1}}],[\"高精度加法\",{\"0\":{\"57\":1}}],[\"因为是前面的数据\",{\"1\":{\"71\":1}}],[\"因为不会越减越大\",{\"1\":{\"57\":1,\"58\":1}}],[\"因此可以借助于\",{\"1\":{\"23\":1}}],[\"因此\",{\"1\":{\"20\":1}}],[\"减法不等\",{\"1\":{\"57\":1,\"58\":1}}],[\"加法等于len\",{\"1\":{\"57\":1,\"58\":1}}],[\"限2个数大于0\",{\"1\":{\"57\":1,\"59\":1,\"60\":1}}],[\"去除小数点\",{\"0\":{\"56\":1}}],[\"去前置0\",{\"0\":{\"55\":1}}],[\"去重\",{\"1\":{\"50\":1,\"51\":1}}],[\"前面的是旧的\",{\"1\":{\"71\":1}}],[\"前提是\",{\"1\":{\"71\":1}}],[\"前置函数\",{\"0\":{\"54\":1}}],[\"前端\",{\"2\":{\"34\":1}}],[\"9\",{\"1\":{\"53\":1}}],[\"key\",{\"1\":{\"79\":3}}],[\"k++\",{\"1\":{\"75\":1}}],[\"k为0则可以无限选取\",{\"1\":{\"74\":1}}],[\"kto10\",{\"1\":{\"53\":1}}],[\"k进制转10进制\",{\"0\":{\"53\":1}}],[\"k\",{\"1\":{\"52\":5,\"53\":2,\"64\":2,\"74\":5,\"75\":5,\"76\":7}}],[\"不满足条件的\",{\"1\":{\"65\":1}}],[\"不进行循环\",{\"1\":{\"52\":1}}],[\"不套省时间\",{\"1\":{\"42\":1}}],[\"可以用两个数组交替保存每一行的信息\",{\"1\":{\"70\":1}}],[\"可以边乘边取余\",{\"1\":{\"53\":1}}],[\"可以根据文件结构将它们转换为不同的页面\",{\"1\":{\"20\":1}}],[\"可超long3\",{\"1\":{\"52\":1}}],[\"可存字母2\",{\"1\":{\"52\":1}}],[\"让a自动排列出全排列\",{\"1\":{\"51\":1}}],[\"才可以排\",{\"1\":{\"51\":1}}],[\"出现重复时不会重复输出\",{\"1\":{\"51\":1}}],[\"出现重复数字时会输出重复数组\",{\"1\":{\"51\":1}}],[\"函数结束后\",{\"1\":{\"60\":1}}],[\"函数\",{\"1\":{\"51\":1}}],[\"保证不会讲重复数字排在同一位置\",{\"1\":{\"51\":1}}],[\"判断该数字是否被选择过\",{\"1\":{\"51\":1}}],[\"此时用set可以去重\",{\"1\":{\"51\":1}}],[\"此文字有脚注\",{\"1\":{\"27\":1}}],[\"弊\",{\"1\":{\"51\":2}}],[\"无序数组也可以放入\",{\"1\":{\"51\":1}}],[\"利用小根堆\",{\"1\":{\"78\":1}}],[\"利\",{\"1\":{\"51\":2}}],[\"d+mp\",{\"1\":{\"81\":1}}],[\"d\",{\"1\":{\"81\":1}}],[\"dis\",{\"1\":{\"81\":8}}],[\"dijkstra\",{\"0\":{\"81\":1}}],[\"dir\",{\"1\":{\"65\":3}}],[\"dp\",{\"1\":{\"69\":7,\"70\":7,\"71\":5,\"72\":5,\"73\":5,\"74\":8,\"75\":4,\"76\":5,\"77\":7,\"78\":7}}],[\"delete\",{\"1\":{\"55\":1,\"57\":1,\"58\":1,\"59\":1}}],[\"do\",{\"1\":{\"51\":1,\"52\":1,\"79\":2}}],[\"down\",{\"1\":{\"46\":4}}],[\"dfs\",{\"1\":{\"51\":3}}],[\"即最小节点\",{\"1\":{\"78\":1}}],[\"即所有的可能性\",{\"1\":{\"51\":1}}],[\"即为000到111\",{\"1\":{\"50\":1}}],[\"全部插入\",{\"1\":{\"78\":1}}],[\"全排列\",{\"0\":{\"51\":1}}],[\"全国二等奖🥈\",{\"1\":{\"5\":1}}],[\"如在小根堆中\",{\"1\":{\"78\":1}}],[\"如在大根堆中\",{\"1\":{\"78\":1}}],[\"如果不需要前面每一的数据\",{\"1\":{\"70\":1,\"71\":1}}],[\"如果你是一个新手\",{\"1\":{\"21\":1}}],[\"如当i选取1\",{\"1\":{\"50\":1}}],[\"则交换\",{\"1\":{\"78\":1}}],[\"则\",{\"1\":{\"78\":1}}],[\"则可以优化一下空间\",{\"1\":{\"70\":1,\"71\":1}}],[\"则需要选择0\",{\"1\":{\"50\":1}}],[\"则返回小于这个数的最后一个数字下标\",{\"1\":{\"48\":1}}],[\"则返回最后一次出现的下标\",{\"1\":{\"48\":1}}],[\"则返回大于这个数的第一个数字下标\",{\"1\":{\"48\":1}}],[\"则返回第一次出现的下标\",{\"1\":{\"48\":1}}],[\"例如n为3\",{\"1\":{\"50\":1}}],[\"ey\",{\"1\":{\"65\":2}}],[\"ex\",{\"1\":{\"65\":2}}],[\"erase\",{\"1\":{\"65\":2}}],[\"end\",{\"1\":{\"51\":1,\"52\":1,\"57\":3,\"58\":3,\"59\":3,\"65\":1}}],[\"eg\",{\"1\":{\"50\":1,\"51\":1}}],[\"else\",{\"1\":{\"48\":4,\"52\":1,\"53\":1,\"65\":1,\"69\":1,\"70\":1,\"74\":1,\"77\":1,\"80\":1}}],[\"二进制拆分\",{\"1\":{\"72\":1}}],[\"二进制枚举\",{\"0\":{\"50\":1}}],[\"二分找到合适的位置用更小的替换\",{\"1\":{\"68\":1}}],[\"二分查找函数\",{\"0\":{\"49\":1}}],[\"二维01背包\",{\"0\":{\"76\":1}}],[\"二维差分\",{\"0\":{\"64\":1}}],[\"二维前缀和\",{\"0\":{\"62\":1}}],[\"没找到返回0\",{\"1\":{\"49\":2}}],[\"没找到返回end\",{\"1\":{\"49\":2}}],[\"数组\",{\"1\":{\"49\":2}}],[\"数学原理建议版\",{\"1\":{\"46\":1}}],[\"任何有序容器都可以使用\",{\"1\":{\"49\":1}}],[\"任务列表\",{\"0\":{\"30\":1}}],[\"返回>=x的第一个元素下标\",{\"1\":{\"49\":2}}],[\"返回>=x的第一个元素的迭代器\",{\"1\":{\"49\":2}}],[\"返回小于这个数字的第一个数字的下标\",{\"1\":{\"48\":1}}],[\"返回大于这个数字的第一个数字的下标\",{\"1\":{\"48\":1}}],[\"返回顶部按钮\",{\"1\":{\"14\":1,\"17\":1}}],[\"若不存在\",{\"1\":{\"48\":2}}],[\"若存在\",{\"1\":{\"48\":2}}],[\"x>>y>>z\",{\"1\":{\"76\":1}}],[\"x\",{\"1\":{\"48\":8,\"49\":2,\"51\":4,\"64\":5,\"65\":26,\"68\":3,\"76\":5,\"77\":5}}],[\"与mod互质时才存在\",{\"1\":{\"48\":1}}],[\"一个被星标了的苹果文章\",{\"1\":{\"136\":1}}],[\"一个被数字\",{\"1\":{\"116\":1}}],[\"一个物品可以选无数次\",{\"1\":{\"73\":1}}],[\"一个物品可以选k次\",{\"1\":{\"72\":1,\"74\":1}}],[\"一个数字被除时取模\",{\"1\":{\"48\":1}}],[\"一维差分\",{\"0\":{\"63\":1}}],[\"一维前缀和\",{\"0\":{\"61\":1}}],[\"一大边一小边\",{\"1\":{\"62\":1}}],[\"一定可以组成c以内的所有的数字\",{\"1\":{\"72\":1}}],[\"一定注意看清x轴和y轴\",{\"1\":{\"65\":1}}],[\"一定注意数组大小范围\",{\"1\":{\"46\":1}}],[\"一定要有序\",{\"1\":{\"51\":1}}],[\"一定记得处理首位\",{\"1\":{\"46\":1}}],[\"逆元\",{\"0\":{\"48\":1},\"1\":{\"48\":1}}],[\"逆元数组\",{\"1\":{\"46\":1}}],[\"排列数\",{\"0\":{\"47\":1}}],[\"预处理函数\",{\"1\":{\"46\":1}}],[\"预处理版\",{\"1\":{\"46\":1}}],[\"阶乘数组\",{\"1\":{\"46\":1}}],[\"费马\",{\"1\":{\"46\":1}}],[\"费马小定理\",{\"1\":{\"40\":1}}],[\"upper\",{\"1\":{\"49\":1}}],[\"up\",{\"1\":{\"46\":4,\"47\":4}}],[\"组号\",{\"1\":{\"75\":1}}],[\"组号相同的物品至多选取一个\",{\"1\":{\"75\":1}}],[\"组合数\",{\"0\":{\"46\":1}}],[\"组件\",{\"0\":{\"33\":1,\"88\":1},\"1\":{\"88\":1}}],[\"最后一个值小于容量的dp则为答案\",{\"1\":{\"78\":1}}],[\"最后在将其删除\",{\"1\":{\"65\":1}}],[\"最小公倍数×最大公约数=a×b\",{\"1\":{\"45\":1}}],[\"最小公倍数\",{\"0\":{\"45\":1},\"1\":{\"65\":1}}],[\"最大公因数\",{\"0\":{\"44\":1}}],[\"矩阵快速幂\",{\"0\":{\"43\":1}}],[\"乘法套用龟速乘\",{\"1\":{\"42\":1}}],[\"龟速乘\",{\"0\":{\"41\":1}}],[\"同上\",{\"1\":{\"40\":1}}],[\"同时每个页面包含\",{\"1\":{\"17\":1}}],[\"ms\",{\"1\":{\"86\":1}}],[\"msort\",{\"1\":{\"80\":3}}],[\"more\",{\"1\":{\"84\":1}}],[\"mod=a\",{\"1\":{\"40\":2}}],[\"mod\",{\"1\":{\"40\":10,\"41\":2,\"46\":5,\"47\":1,\"48\":4}}],[\"min\",{\"1\":{\"78\":1}}],[\"mid+1\",{\"1\":{\"80\":2}}],[\"mid\",{\"1\":{\"48\":16,\"80\":6}}],[\"m>>n\",{\"1\":{\"77\":1}}],[\"merge\",{\"1\":{\"65\":4,\"80\":2}}],[\"memset\",{\"1\":{\"62\":1,\"68\":1,\"78\":1}}],[\"mp\",{\"1\":{\"65\":8,\"81\":1}}],[\"mul\",{\"1\":{\"59\":1,\"60\":1}}],[\"m+1\",{\"1\":{\"47\":1}}],[\"main\",{\"1\":{\"61\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1}}],[\"max\",{\"1\":{\"57\":1,\"58\":1,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":2,\"75\":1,\"76\":1,\"77\":1,\"78\":3}}],[\"maxn\",{\"1\":{\"46\":1}}],[\"markdown\",{\"0\":{\"20\":1,\"21\":1,\"22\":1,\"23\":1},\"1\":{\"20\":2,\"21\":3,\"22\":1,\"23\":3,\"24\":2,\"25\":1,\"85\":3,\"86\":1,\"87\":2,\"88\":2},\"2\":{\"35\":1}}],[\"m\",{\"0\":{\"46\":1,\"47\":1},\"1\":{\"46\":7,\"47\":2,\"61\":1,\"69\":3,\"70\":4,\"71\":4,\"72\":4,\"73\":4,\"74\":5,\"75\":4,\"77\":3,\"78\":3}}],[\"apple\",{\"0\":{\"154\":1}}],[\"arr\",{\"1\":{\"80\":12}}],[\"auto\",{\"1\":{\"65\":3}}],[\"add\",{\"1\":{\"64\":1}}],[\"a2\",{\"1\":{\"62\":4}}],[\"a1\",{\"1\":{\"62\":4}}],[\"a原数组\",{\"1\":{\"61\":1}}],[\"a+n\",{\"1\":{\"51\":1}}],[\"a+b\",{\"1\":{\"40\":1}}],[\"a为大数\",{\"1\":{\"44\":1}}],[\"ans\",{\"1\":{\"41\":4,\"42\":4}}],[\"a不能整除b时\",{\"1\":{\"40\":1}}],[\"a能整除b时\",{\"1\":{\"40\":1}}],[\"a\",{\"0\":{\"47\":1},\"1\":{\"40\":6,\"41\":5,\"42\":5,\"44\":3,\"45\":3,\"47\":1,\"50\":1,\"51\":6,\"52\":1,\"53\":1,\"57\":6,\"58\":10,\"59\":5,\"60\":2,\"61\":1,\"62\":4,\"64\":1,\"68\":3,\"69\":3,\"70\":3,\"71\":3,\"72\":3,\"73\":3,\"74\":5,\"75\":3,\"76\":9,\"77\":3,\"78\":4,\"79\":9}}],[\"as\",{\"1\":{\"38\":1,\"39\":1,\"85\":1}}],[\"内存换时间\",{\"0\":{\"39\":1}}],[\"内容\",{\"1\":{\"23\":1}}],[\"欧拉筛\",{\"0\":{\"39\":1}}],[\"j<=c\",{\"1\":{\"72\":1}}],[\"j=1\",{\"1\":{\"72\":1}}],[\"j==2时\",{\"1\":{\"50\":1}}],[\"j==1时\",{\"1\":{\"50\":1}}],[\"j++\",{\"1\":{\"39\":1,\"50\":1,\"59\":1,\"62\":1,\"69\":1,\"70\":1,\"73\":1,\"74\":1,\"77\":1}}],[\"j\",{\"1\":{\"38\":4,\"39\":4,\"50\":4,\"59\":3,\"62\":6,\"64\":4,\"65\":7,\"69\":8,\"70\":8,\"71\":6,\"72\":9,\"73\":5,\"74\":17,\"75\":7,\"76\":7,\"77\":8,\"78\":6,\"79\":9}}],[\"<n\",{\"1\":{\"64\":1}}],[\"<<\",{\"1\":{\"48\":1,\"50\":1,\"51\":3,\"62\":2,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":2,\"78\":1}}],[\"<\",{\"1\":{\"38\":2,\"46\":1,\"48\":2,\"50\":2,\"51\":1,\"52\":1,\"53\":1,\"55\":1,\"56\":1,\"57\":3,\"58\":7,\"59\":2,\"60\":1,\"62\":1,\"65\":3,\"72\":1,\"74\":1,\"79\":3,\"80\":2,\"81\":2}}],[\"<=m\",{\"1\":{\"69\":1}}],[\"<=n\",{\"1\":{\"39\":2}}],[\"<=\",{\"1\":{\"37\":1,\"46\":1,\"47\":1,\"48\":2,\"51\":2,\"53\":1,\"57\":1,\"59\":1,\"62\":2,\"65\":1,\"68\":2,\"69\":2,\"70\":3,\"71\":2,\"72\":1,\"73\":3,\"74\":2,\"75\":4,\"76\":6,\"77\":3,\"78\":4,\"80\":5}}],[\"注释之前的内容被视为文章摘要\",{\"1\":{\"84\":1}}],[\"注意是pos不是n\",{\"1\":{\"72\":1}}],[\"注意使用差分则不能区间查询\",{\"1\":{\"63\":1,\"64\":1}}],[\"注\",{\"1\":{\"38\":1}}],[\"vue\",{\"1\":{\"88\":2}}],[\"vuepress\",{\"0\":{\"24\":1},\"1\":{\"20\":2,\"22\":2,\"23\":1,\"24\":2,\"25\":1,\"87\":1}}],[\"vis\",{\"1\":{\"81\":2}}],[\"vector<pair<int\",{\"1\":{\"81\":1}}],[\"vector<bool>vis\",{\"1\":{\"81\":1}}],[\"vector<int>dis\",{\"1\":{\"81\":1}}],[\"vector<int>dijkstra\",{\"1\":{\"81\":1}}],[\"vector<int>v\",{\"1\":{\"57\":1,\"58\":1,\"59\":1}}],[\"volume\",{\"1\":{\"76\":1}}],[\"void\",{\"1\":{\"38\":1,\"39\":1,\"46\":1,\"51\":1,\"63\":1,\"64\":2,\"65\":4,\"79\":1,\"80\":2}}],[\"value\",{\"1\":{\"69\":2,\"70\":2,\"71\":2,\"72\":2,\"73\":2,\"74\":2,\"76\":1,\"78\":2}}],[\"v\",{\"1\":{\"38\":4,\"39\":3,\"51\":5,\"57\":6,\"58\":6,\"59\":2,\"65\":4,\"69\":3,\"70\":3,\"71\":3,\"72\":5,\"73\":3,\"74\":6,\"75\":2,\"76\":3,\"77\":1,\"78\":2}}],[\"时间换内存\",{\"0\":{\"38\":1}}],[\"埃筛\",{\"0\":{\"38\":1}}],[\">size\",{\"1\":{\"65\":1}}],[\">=v\",{\"1\":{\"78\":1}}],[\">=b\",{\"1\":{\"60\":1}}],[\">=\",{\"1\":{\"53\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"74\":2,\"75\":1,\"76\":2,\"77\":3,\"79\":1}}],[\">>\",{\"1\":{\"48\":4,\"62\":6,\"68\":1,\"69\":4,\"70\":4,\"71\":4,\"72\":4,\"73\":4,\"74\":5,\"75\":5,\"76\":4,\"77\":3,\"78\":4,\"79\":1}}],[\">>=\",{\"1\":{\"41\":1,\"42\":1}}],[\">\",{\"1\":{\"37\":1,\"46\":2,\"47\":1,\"60\":1,\"79\":1}}],[\"found\",{\"1\":{\"151\":1}}],[\"for\",{\"1\":{\"37\":1,\"38\":2,\"39\":2,\"46\":2,\"47\":1,\"48\":1,\"50\":2,\"51\":3,\"53\":1,\"55\":1,\"56\":1,\"57\":4,\"58\":4,\"59\":3,\"60\":1,\"61\":1,\"62\":3,\"64\":3,\"65\":3,\"68\":2,\"69\":3,\"70\":3,\"71\":3,\"72\":4,\"73\":3,\"74\":5,\"75\":4,\"76\":6,\"77\":4,\"78\":4,\"81\":1}}],[\"first\",{\"1\":{\"81\":1,\"85\":1}}],[\"find\",{\"1\":{\"51\":1,\"65\":10}}],[\"fa\",{\"1\":{\"65\":12}}],[\"false\",{\"1\":{\"51\":1}}],[\"fac\",{\"1\":{\"46\":6}}],[\"f\",{\"1\":{\"48\":18,\"65\":1}}],[\"front\",{\"1\":{\"65\":8}}],[\"frontmatter\",{\"1\":{\"14\":1,\"17\":1,\"22\":4,\"85\":1,\"86\":1}}],[\"frac\",{\"1\":{\"29\":4}}],[\"01背包问题求具体方案\",{\"0\":{\"77\":1}}],[\"01背包压缩成一维时\",{\"1\":{\"73\":1}}],[\"01背包\",{\"0\":{\"69\":1}}],[\"010==0\",{\"1\":{\"50\":1}}],[\"010\",{\"1\":{\"50\":1}}],[\"0x3f3f3f\",{\"1\":{\"81\":1}}],[\"0x3f\",{\"1\":{\"68\":1,\"78\":1}}],[\"0代表未选取\",{\"1\":{\"50\":1}}],[\"0\",{\"1\":{\"37\":4,\"38\":1,\"39\":3,\"41\":1,\"46\":4,\"47\":1,\"50\":11,\"51\":2,\"52\":1,\"53\":3,\"55\":3,\"56\":2,\"57\":7,\"58\":8,\"59\":6,\"60\":2,\"62\":2,\"64\":1,\"65\":10,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":3,\"75\":1,\"76\":2,\"77\":1,\"78\":4,\"81\":4}}],[\"5的倍数\",{\"1\":{\"65\":1}}],[\"5有多少的倍数\",{\"1\":{\"65\":1}}],[\"5700\",{\"1\":{\"65\":1}}],[\"5\",{\"1\":{\"37\":2,\"65\":3}}],[\"6000\",{\"1\":{\"65\":3}}],[\"6\",{\"1\":{\"37\":3}}],[\"6倍速普通方法\",{\"0\":{\"37\":1}}],[\"321\",{\"1\":{\"51\":1}}],[\"312\",{\"1\":{\"51\":1}}],[\"3\",{\"0\":{\"93\":1,\"98\":1,\"103\":1,\"108\":1,\"113\":1,\"118\":1,\"121\":1,\"123\":1,\"128\":1,\"133\":1,\"138\":1,\"141\":1,\"143\":1,\"148\":1},\"1\":{\"37\":1,\"50\":1,\"51\":2,\"65\":5}}],[\"||\",{\"1\":{\"37\":2,\"58\":1,\"60\":1}}],[\"not\",{\"1\":{\"151\":1}}],[\"now\",{\"1\":{\"81\":4}}],[\"num\",{\"1\":{\"69\":1,\"70\":1}}],[\"ny\",{\"1\":{\"65\":5}}],[\"nx\",{\"1\":{\"65\":5}}],[\"n=0\",{\"1\":{\"53\":1}}],[\"next\",{\"1\":{\"51\":2}}],[\"n\",{\"0\":{\"46\":1,\"47\":1},\"1\":{\"37\":9,\"38\":5,\"39\":3,\"46\":7,\"47\":4,\"48\":5,\"50\":1,\"51\":4,\"52\":6,\"53\":4,\"61\":2,\"62\":2,\"64\":2,\"68\":2,\"69\":5,\"70\":5,\"71\":4,\"72\":3,\"73\":4,\"74\":3,\"75\":4,\"77\":4,\"78\":4,\"81\":4}}],[\"banana\",{\"0\":{\"153\":1}}],[\"be\",{\"1\":{\"85\":1}}],[\"begin\",{\"1\":{\"52\":1,\"57\":3,\"58\":3,\"59\":3,\"65\":4}}],[\"b>>c\",{\"1\":{\"72\":1}}],[\"b+1\",{\"1\":{\"68\":1}}],[\"bfs\",{\"1\":{\"65\":1}}],[\"b数组是前缀和数组\",{\"1\":{\"63\":1,\"64\":1}}],[\"b2\",{\"1\":{\"62\":4}}],[\"b1\",{\"1\":{\"62\":4}}],[\"b前缀和数组\",{\"1\":{\"61\":1}}],[\"bound\",{\"1\":{\"49\":2,\"68\":1}}],[\"bool\",{\"1\":{\"37\":1,\"38\":1,\"39\":1,\"65\":2}}],[\"b^\",{\"1\":{\"40\":1}}],[\"b\",{\"1\":{\"40\":8,\"41\":4,\"42\":4,\"44\":4,\"45\":3,\"48\":1,\"57\":6,\"58\":9,\"59\":5,\"60\":4,\"61\":3,\"62\":4,\"63\":2,\"64\":8,\"65\":1,\"68\":5,\"69\":3,\"70\":3,\"71\":3,\"72\":2,\"73\":3,\"74\":5,\"75\":3,\"77\":3}}],[\"break\",{\"1\":{\"39\":1}}],[\"blog\",{\"1\":{\"0\":1}}],[\"笔记\",{\"0\":{\"36\":1}}],[\"hope\",{\"1\":{\"86\":1}}],[\"home\",{\"1\":{\"0\":1}}],[\"h1\",{\"1\":{\"85\":2}}],[\"high是最高位数的下标\",{\"1\":{\"79\":1}}],[\"high\",{\"1\":{\"79\":4}}],[\"h2o\",{\"1\":{\"32\":1}}],[\"上浮\",{\"1\":{\"78\":1}}],[\"上一个迭代器\",{\"1\":{\"65\":1}}],[\"上一篇\",{\"1\":{\"14\":1}}],[\"上下角标\",{\"0\":{\"32\":1}}],[\"支持为图片设置颜色模式和大小\",{\"1\":{\"31\":1}}],[\"25\",{\"1\":{\"65\":4}}],[\"2为大边\",{\"1\":{\"62\":1}}],[\"231\",{\"1\":{\"51\":1}}],[\"213\",{\"1\":{\"51\":1}}],[\"2^4\",{\"1\":{\"50\":1}}],[\"2\",{\"0\":{\"92\":1,\"97\":1,\"102\":1,\"107\":1,\"112\":1,\"116\":1,\"117\":1,\"122\":1,\"127\":1,\"132\":1,\"136\":1,\"137\":1,\"142\":1,\"147\":1},\"1\":{\"30\":1,\"37\":2,\"38\":1,\"39\":1,\"40\":1,\"46\":1,\"48\":1,\"50\":1,\"51\":2,\"65\":6,\"70\":1,\"72\":1,\"74\":1,\"80\":1}}],[\"2020\",{\"1\":{\"86\":1}}],[\"2025年\",{\"1\":{\"4\":3,\"5\":1,\"6\":1}}],[\"2024年\",{\"1\":{\"4\":2,\"5\":1,\"6\":1}}],[\"计划\",{\"1\":{\"30\":2}}],[\"rank\",{\"1\":{\"65\":9}}],[\"r+1\",{\"1\":{\"63\":1,\"64\":1}}],[\"regarded\",{\"1\":{\"85\":1}}],[\"remove\",{\"1\":{\"60\":1}}],[\"removed\",{\"1\":{\"56\":1}}],[\"res+=\",{\"1\":{\"60\":1}}],[\"res\",{\"1\":{\"60\":3}}],[\"reverse\",{\"1\":{\"52\":1,\"57\":3,\"58\":3,\"59\":3}}],[\"return\",{\"1\":{\"37\":4,\"41\":1,\"42\":1,\"44\":1,\"45\":1,\"46\":4,\"47\":2,\"48\":4,\"51\":1,\"52\":1,\"53\":1,\"55\":2,\"56\":2,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"64\":2,\"65\":4,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"79\":1,\"81\":1}}],[\"r\",{\"1\":{\"29\":3,\"61\":2,\"63\":1,\"64\":3,\"80\":6}}],[\"right\",{\"1\":{\"29\":3,\"80\":9}}],[\"^\",{\"1\":{\"29\":1}}],[\"^i\",{\"1\":{\"29\":1}}],[\"^r\",{\"1\":{\"29\":2}}],[\"i<=n\",{\"1\":{\"48\":1,\"61\":1}}],[\"i=2\",{\"1\":{\"48\":1}}],[\"i=1\",{\"1\":{\"29\":1,\"61\":1}}],[\"in\",{\"1\":{\"85\":1}}],[\"insert\",{\"1\":{\"50\":1,\"51\":1,\"63\":1,\"64\":1}}],[\"inv\",{\"1\":{\"46\":5,\"48\":3}}],[\"int>>>\",{\"1\":{\"81\":1}}],[\"int>>\",{\"1\":{\"81\":1}}],[\"int>\",{\"1\":{\"81\":1}}],[\"int\",{\"1\":{\"37\":2,\"38\":5,\"39\":5,\"47\":1,\"48\":1,\"50\":3,\"51\":4,\"52\":1,\"53\":3,\"55\":1,\"56\":1,\"57\":5,\"58\":5,\"59\":4,\"60\":1,\"61\":4,\"62\":4,\"63\":3,\"64\":16,\"65\":25,\"68\":4,\"69\":8,\"70\":8,\"71\":8,\"72\":10,\"73\":8,\"74\":11,\"75\":6,\"76\":12,\"77\":8,\"78\":6,\"79\":6,\"80\":13,\"81\":6}}],[\"i+j\",{\"1\":{\"59\":1}}],[\"i+i\",{\"1\":{\"38\":1}}],[\"i++\",{\"1\":{\"38\":1,\"39\":1,\"46\":2,\"47\":1,\"48\":1,\"50\":1,\"51\":3,\"53\":1,\"55\":1,\"56\":1,\"57\":4,\"58\":4,\"59\":2,\"60\":1,\"61\":1,\"62\":2,\"65\":3,\"68\":2,\"69\":2,\"70\":2,\"71\":2,\"72\":2,\"73\":2,\"74\":2,\"75\":2,\"76\":4,\"77\":2,\"78\":3,\"79\":1,\"81\":1}}],[\"i+1\",{\"1\":{\"29\":1,\"56\":1}}],[\"if\",{\"1\":{\"37\":3,\"38\":1,\"39\":2,\"41\":1,\"42\":1,\"46\":2,\"47\":1,\"48\":4,\"50\":1,\"51\":2,\"52\":1,\"53\":1,\"55\":1,\"56\":1,\"58\":1,\"65\":7,\"69\":1,\"70\":1,\"72\":1,\"74\":3,\"75\":1,\"76\":1,\"77\":3,\"78\":1,\"79\":2,\"80\":2,\"81\":3}}],[\"isprime\",{\"1\":{\"37\":1}}],[\"i\",{\"1\":{\"29\":1,\"37\":6,\"38\":5,\"39\":7,\"46\":11,\"47\":3,\"48\":4,\"50\":3,\"51\":15,\"53\":6,\"55\":4,\"56\":4,\"57\":16,\"58\":16,\"59\":6,\"60\":4,\"61\":4,\"62\":8,\"64\":19,\"65\":22,\"68\":7,\"69\":14,\"70\":14,\"71\":9,\"72\":9,\"73\":9,\"74\":11,\"75\":9,\"76\":16,\"77\":24,\"78\":13,\"79\":6,\"81\":8,\"88\":1}}],[\"it\",{\"1\":{\"23\":2}}],[\"sort\",{\"1\":{\"79\":3}}],[\"sy\",{\"1\":{\"65\":3}}],[\"sx\",{\"1\":{\"65\":3}}],[\"second\",{\"1\":{\"65\":1,\"81\":1}}],[\"set<int>s\",{\"1\":{\"51\":1}}],[\"set\",{\"1\":{\"50\":1}}],[\"swap\",{\"1\":{\"58\":1,\"65\":1,\"79\":1}}],[\"swordfish的博客\",{\"0\":{\"0\":1}}],[\"sub\",{\"1\":{\"58\":1}}],[\"substr\",{\"1\":{\"55\":1,\"56\":2}}],[\"sum+=\",{\"1\":{\"65\":1}}],[\"sum+a\",{\"1\":{\"60\":1}}],[\"sum=sub\",{\"1\":{\"60\":1}}],[\"sum=\",{\"1\":{\"60\":1}}],[\"sum不加\",{\"1\":{\"50\":1}}],[\"sum加\",{\"1\":{\"50\":1}}],[\"sum\",{\"1\":{\"29\":1,\"50\":3,\"57\":5,\"58\":5,\"59\":5,\"60\":6,\"64\":4,\"65\":1}}],[\"sizeof\",{\"1\":{\"62\":1,\"68\":1,\"78\":1}}],[\"size\",{\"1\":{\"53\":1,\"55\":1,\"56\":1,\"57\":4,\"58\":8,\"59\":6,\"60\":5,\"65\":4,\"79\":1,\"81\":1}}],[\"stay\",{\"1\":{\"81\":3}}],[\"struct\",{\"1\":{\"65\":1}}],[\"string\",{\"1\":{\"52\":2,\"53\":1,\"55\":2,\"56\":2,\"57\":4,\"58\":5,\"59\":4,\"60\":4}}],[\"stl\",{\"1\":{\"49\":2}}],[\"s\",{\"1\":{\"51\":2,\"52\":6,\"53\":6,\"55\":4,\"56\":6,\"62\":11,\"65\":3}}],[\"+v\",{\"1\":{\"77\":2}}],[\"+a\",{\"1\":{\"61\":1}}],[\"++\",{\"1\":{\"60\":1,\"65\":1}}],[\"+b\",{\"1\":{\"59\":2,\"64\":1}}],[\"+mod防止出现负数\",{\"1\":{\"40\":1}}],[\"+mod\",{\"1\":{\"40\":1}}],[\"+=size\",{\"1\":{\"65\":1}}],[\"+=c\",{\"1\":{\"63\":1,\"64\":1}}],[\"+=\",{\"1\":{\"37\":1,\"38\":1,\"50\":1,\"52\":2,\"53\":2,\"57\":4,\"58\":3,\"59\":2,\"62\":2,\"64\":3}}],[\"+\",{\"1\":{\"29\":1,\"37\":1,\"40\":1,\"41\":2,\"46\":1,\"48\":8,\"51\":3,\"52\":2,\"53\":1,\"56\":1,\"57\":2,\"58\":2,\"59\":1,\"62\":2,\"65\":3,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":2,\"75\":1,\"76\":1,\"77\":4,\"78\":1,\"79\":3,\"80\":1,\"88\":1}}],[\"y\",{\"1\":{\"29\":2,\"65\":15,\"76\":3}}],[\"y^\",{\"1\":{\"29\":2}}],[\"=0\",{\"1\":{\"72\":1,\"81\":1}}],[\"=j\",{\"1\":{\"72\":1}}],[\"=a\",{\"1\":{\"72\":2}}],[\"=2\",{\"1\":{\"72\":1}}],[\"=y\",{\"1\":{\"65\":1}}],[\"=c\",{\"1\":{\"63\":1,\"64\":1}}],[\"=b\",{\"1\":{\"61\":1,\"64\":1,\"72\":2}}],[\"=remove\",{\"1\":{\"60\":1}}],[\"=mod\",{\"1\":{\"48\":1}}],[\"=1\",{\"1\":{\"38\":1,\"48\":1}}],[\"==b\",{\"1\":{\"58\":1}}],[\"==s\",{\"1\":{\"51\":1}}],[\"==\",{\"1\":{\"37\":4,\"39\":1,\"51\":2,\"56\":1,\"60\":1,\"65\":6,\"74\":1,\"77\":1}}],[\"=\",{\"1\":{\"29\":1,\"37\":3,\"38\":6,\"39\":6,\"41\":3,\"42\":3,\"45\":1,\"46\":12,\"47\":4,\"48\":20,\"50\":3,\"51\":6,\"52\":2,\"53\":3,\"55\":2,\"56\":1,\"57\":6,\"58\":8,\"59\":4,\"60\":1,\"62\":3,\"64\":7,\"65\":31,\"68\":6,\"69\":8,\"70\":8,\"71\":7,\"72\":7,\"73\":7,\"74\":21,\"75\":7,\"76\":10,\"77\":11,\"78\":8,\"79\":3,\"80\":9,\"81\":6}}],[\"l\",{\"1\":{\"61\":2,\"63\":2,\"64\":4,\"80\":6}}],[\"len+1\",{\"1\":{\"68\":1}}],[\"len+5\",{\"1\":{\"57\":1,\"58\":1,\"59\":1}}],[\"len=a\",{\"1\":{\"59\":2}}],[\"len\",{\"1\":{\"53\":2,\"57\":3,\"58\":3,\"59\":2,\"68\":3}}],[\"left++\",{\"1\":{\"80\":1}}],[\"left\",{\"1\":{\"29\":3,\"80\":11}}],[\"lcm\",{\"1\":{\"45\":1}}],[\"low是最低位的下标\",{\"1\":{\"79\":1}}],[\"lowbit\",{\"1\":{\"64\":4}}],[\"lower\",{\"1\":{\"49\":1,\"68\":1}}],[\"low\",{\"1\":{\"41\":1,\"42\":2,\"79\":4}}],[\"logn\",{\"1\":{\"78\":1}}],[\"log\",{\"1\":{\"29\":2}}],[\"ll\",{\"1\":{\"41\":4,\"42\":4,\"44\":3,\"45\":3,\"46\":9,\"47\":4,\"48\":16,\"52\":1,\"53\":2,\"62\":1}}],[\"layout\",{\"1\":{\"0\":1}}],[\"public\",{\"1\":{\"87\":1}}],[\"push\",{\"1\":{\"65\":2,\"81\":2}}],[\"page\",{\"1\":{\"85\":1}}],[\"partial\",{\"1\":{\"29\":1}}],[\"partial^r\",{\"1\":{\"29\":1}}],[\"pow\",{\"1\":{\"72\":1}}],[\"posts\",{\"0\":{\"152\":1}}],[\"pos++\",{\"1\":{\"72\":2,\"74\":3,\"80\":8}}],[\"pos\",{\"1\":{\"72\":2,\"74\":8,\"80\":9}}],[\"pos=1\",{\"1\":{\"72\":1}}],[\"pop\",{\"1\":{\"65\":1,\"81\":1}}],[\"point\",{\"1\":{\"65\":2,\"81\":4}}],[\"plus\",{\"1\":{\"57\":1}}],[\"permutation\",{\"1\":{\"51\":2}}],[\"priority\",{\"1\":{\"81\":1}}],[\"primes\",{\"1\":{\"38\":2,\"39\":5}}],[\"pre\",{\"1\":{\"46\":1}}],[\"programming\",{\"0\":{\"4\":1}}],[\"$$\",{\"1\":{\"29\":2}}],[\"导入文件\",{\"0\":{\"28\":1}}],[\"导航栏\",{\"1\":{\"14\":1,\"17\":1}}],[\"1≤n≤100\",{\"1\":{\"78\":1}}],[\"1≤m≤1e9\",{\"1\":{\"78\":1}}],[\"1为小边\",{\"1\":{\"62\":1}}],[\"102\",{\"1\":{\"76\":3}}],[\"100\",{\"1\":{\"75\":1}}],[\"1002\",{\"1\":{\"69\":4,\"70\":3,\"71\":3,\"72\":3,\"73\":3,\"74\":4,\"76\":2}}],[\"100以内\",{\"1\":{\"65\":1}}],[\"1000000009\",{\"1\":{\"65\":2}}],[\"1000\",{\"1\":{\"62\":2}}],[\"1001\",{\"1\":{\"38\":1,\"39\":1}}],[\"10\",{\"1\":{\"52\":2,\"53\":1,\"57\":2,\"58\":1,\"116\":1}}],[\"10tok\",{\"1\":{\"52\":1}}],[\"10进制转k进制\",{\"0\":{\"52\":1}}],[\"132\",{\"1\":{\"51\":1}}],[\"123\",{\"1\":{\"51\":1}}],[\"123的全排列\",{\"1\":{\"51\":1}}],[\"1时\",{\"1\":{\"50\":1}}],[\"1次\",{\"1\":{\"50\":1}}],[\"1<<n\",{\"1\":{\"50\":1}}],[\"19th\",{\"1\":{\"32\":1}}],[\"1\",{\"0\":{\"111\":1,\"131\":1},\"1\":{\"27\":1,\"29\":1,\"30\":1,\"37\":3,\"38\":2,\"41\":2,\"42\":3,\"46\":7,\"47\":1,\"48\":17,\"50\":9,\"51\":6,\"52\":1,\"57\":1,\"58\":1,\"61\":2,\"62\":10,\"64\":5,\"65\":11,\"68\":2,\"69\":6,\"70\":12,\"71\":2,\"72\":3,\"73\":2,\"74\":6,\"75\":3,\"76\":4,\"77\":8,\"78\":2,\"79\":5,\"86\":2,\"88\":2}}],[\"脚注\",{\"0\":{\"27\":1}}],[\"选项卡\",{\"0\":{\"26\":1}}],[\"提供更加丰富的写作功能\",{\"1\":{\"25\":1}}],[\"插件\",{\"1\":{\"25\":1}}],[\"插件来实现\",{\"1\":{\"23\":1}}],[\"语法\",{\"0\":{\"29\":1},\"1\":{\"25\":1,\"88\":1}}],[\"语法进行了扩展\",{\"1\":{\"24\":1}}],[\"语法扩展\",{\"1\":{\"23\":1}}],[\"对于\",{\"1\":{\"87\":1}}],[\"对每次插入的元素进行上浮\",{\"1\":{\"78\":1}}],[\"对点求\",{\"1\":{\"48\":1}}],[\"对点求版\",{\"1\":{\"46\":1}}],[\"对\",{\"1\":{\"24\":1}}],[\"为lcm\",{\"1\":{\"65\":1}}],[\"为了避免重复选择而反向dp\",{\"1\":{\"73\":1}}],[\"为了方便观察省去了很多取模\",{\"1\":{\"46\":1}}],[\"为了丰富文档写作\",{\"1\":{\"24\":1}}],[\"为每个\",{\"1\":{\"22\":1}}],[\"来解析\",{\"1\":{\"23\":1}}],[\"会使用\",{\"1\":{\"23\":1}}],[\"扩展\",{\"0\":{\"23\":1,\"24\":1},\"1\":{\"24\":1}}],[\"了解详情\",{\"1\":{\"22\":1}}],[\"请使用绝对链接\",{\"1\":{\"87\":1}}],[\"请阅读\",{\"1\":{\"22\":1,\"24\":1}}],[\"请先阅读\",{\"1\":{\"21\":1}}],[\"是\",{\"1\":{\"22\":1}}],[\"通过\",{\"1\":{\"22\":1,\"25\":1}}],[\"配置\",{\"0\":{\"22\":1}}],[\"演示\",{\"1\":{\"21\":1}}],[\"还不会编写\",{\"1\":{\"21\":1}}],[\"介绍\",{\"0\":{\"21\":1},\"1\":{\"21\":1,\"22\":1}}],[\"以便\",{\"1\":{\"20\":1}}],[\"文件夹的图片\",{\"1\":{\"87\":1}}],[\"文件放置在一起使用相对路径进行引用\",{\"1\":{\"87\":1}}],[\"文件生成页面\",{\"1\":{\"20\":1}}],[\"文章标题列表\",{\"1\":{\"17\":1}}],[\"主题扩展了更多\",{\"1\":{\"25\":1}}],[\"主题扩展\",{\"0\":{\"25\":1}}],[\"主题也带有以下元素\",{\"1\":{\"17\":1}}],[\"主要从\",{\"1\":{\"20\":1}}],[\"使用方法\",{\"0\":{\"20\":1}}],[\"使用指南\",{\"1\":{\"86\":2},\"2\":{\"13\":1,\"15\":1,\"89\":1,\"90\":1}}],[\"指南\",{\"2\":{\"18\":1}}],[\"中使用\",{\"1\":{\"88\":1}}],[\"中设置页面信息\",{\"1\":{\"86\":1}}],[\"中设置页面标题\",{\"1\":{\"85\":1}}],[\"中间不能空缺\",{\"1\":{\"78\":1}}],[\"中的第一个\",{\"1\":{\"85\":1}}],[\"中的\",{\"1\":{\"24\":1}}],[\"中很重要的一个概念\",{\"1\":{\"22\":1}}],[\"中自定义它们\",{\"1\":{\"17\":1}}],[\"中国高校计算机大赛\",{\"0\":{\"5\":1}}],[\"中国大学生程序设计竞赛\",{\"0\":{\"4\":1}}],[\"打印按钮\",{\"1\":{\"17\":1}}],[\"夜间模式按钮\",{\"1\":{\"17\":1}}],[\"title\",{\"1\":{\"85\":3}}],[\"the\",{\"1\":{\"85\":1}}],[\"top\",{\"1\":{\"81\":2}}],[\"toc\",{\"1\":{\"17\":1}}],[\"temparr\",{\"1\":{\"80\":10}}],[\"tex\",{\"0\":{\"29\":1}}],[\"t++\",{\"1\":{\"77\":1}}],[\"t<=f\",{\"1\":{\"48\":4}}],[\"t\",{\"1\":{\"45\":1,\"48\":14,\"65\":3,\"76\":4,\"77\":1}}],[\"true\",{\"1\":{\"0\":1,\"39\":1,\"51\":1}}],[\"布局包括\",{\"1\":{\"17\":1}}],[\"布局\",{\"0\":{\"17\":1},\"2\":{\"19\":1}}],[\"布局与功能禁用\",{\"0\":{\"14\":1}}],[\"禁用\",{\"2\":{\"16\":1}}],[\"禁用了如下功能\",{\"1\":{\"14\":1}}],[\"页面都会被转换为一个\",{\"1\":{\"88\":1}}],[\"页面内容\",{\"0\":{\"87\":1}}],[\"页面标题\",{\"0\":{\"85\":1},\"1\":{\"85\":1}}],[\"页面配置\",{\"0\":{\"84\":1},\"1\":{\"86\":1},\"2\":{\"90\":1}}],[\"页面引入配置\",{\"1\":{\"22\":1}}],[\"页面信息\",{\"0\":{\"86\":1},\"1\":{\"14\":1}}],[\"页脚\",{\"1\":{\"14\":1,\"17\":1}}],[\"评论\",{\"1\":{\"14\":1,\"17\":1}}],[\"链接\",{\"1\":{\"14\":1}}],[\"编辑此页链接\",{\"1\":{\"14\":1}}],[\"贡献者\",{\"1\":{\"14\":1,\"17\":1}}],[\"路径导航\",{\"1\":{\"14\":1,\"17\":1}}],[\"侧边栏\",{\"1\":{\"14\":1,\"17\":1}}],[\"本页面就是一个示例\",{\"1\":{\"14\":1}}],[\"你也可以创建并引入你自己的组件\",{\"1\":{\"88\":1}}],[\"你需要创建并编写\",{\"1\":{\"20\":1}}],[\"你可以将图片和\",{\"1\":{\"87\":1}}],[\"你可以自由在这里书写你的\",{\"1\":{\"87\":1}}],[\"你可以在\",{\"1\":{\"85\":1,\"86\":1}}],[\"你可以在主题选项和页面的\",{\"1\":{\"17\":1}}],[\"你可以使用它轻松生成文档或博客站点\",{\"1\":{\"20\":1}}],[\"你可以通过设置页面的\",{\"1\":{\"14\":1}}],[\"你应该在页面前端设置\",{\"1\":{\"0\":1}}],[\"网站收藏\",{\"0\":{\"12\":1}}],[\"红\",{\"2\":{\"11\":1,\"95\":1,\"100\":1,\"105\":1,\"110\":1,\"135\":1,\"140\":1,\"145\":1,\"150\":1}}],[\"火龙果\",{\"0\":{\"96\":1},\"2\":{\"10\":1,\"99\":1}}],[\"应聘要求参考\",{\"0\":{\"9\":1}}],[\"学习路线\",{\"0\":{\"7\":1,\"8\":1}}],[\"银奖🥈\",{\"1\":{\"6\":1}}],[\"第几个物品\",{\"1\":{\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1}}],[\"第二列1代表选取\",{\"1\":{\"50\":1}}],[\"第十一届\",{\"1\":{\"6\":1}}],[\"第十二届\",{\"1\":{\"6\":1}}],[\"第十届\",{\"1\":{\"5\":1}}],[\"第九届\",{\"1\":{\"5\":1}}],[\"福建省大学生程序设计竞赛\",{\"0\":{\"6\":1}}],[\"福建省三等奖🥉\",{\"1\":{\"5\":1}}],[\"福建省一等奖🥇\",{\"1\":{\"5\":1}}],[\"福州邀请赛\",{\"1\":{\"4\":2}}],[\"团体程序天梯赛\",{\"0\":{\"5\":1}}],[\"东北邀请赛\",{\"1\":{\"4\":1}}],[\"铜奖🥉\",{\"1\":{\"4\":5,\"6\":1}}],[\"郑州邀请赛\",{\"1\":{\"4\":2}}],[\"char\",{\"1\":{\"65\":1}}],[\"china\",{\"0\":{\"4\":1}}],[\"cin\",{\"1\":{\"62\":2,\"68\":1,\"69\":2,\"70\":2,\"71\":2,\"72\":2,\"73\":2,\"74\":2,\"75\":2,\"76\":4,\"77\":2,\"78\":2}}],[\"cin>>l>>r\",{\"1\":{\"61\":1}}],[\"cin>>a\",{\"1\":{\"61\":1}}],[\"cin>>n>>m\",{\"1\":{\"61\":1}}],[\"c\",{\"0\":{\"46\":1},\"1\":{\"46\":2,\"63\":1,\"64\":1,\"65\":1,\"72\":5,\"74\":9,\"75\":4}}],[\"cnt++\",{\"1\":{\"38\":1,\"39\":1}}],[\"cnt\",{\"1\":{\"38\":1,\"39\":1,\"48\":4,\"74\":1}}],[\"cdots\",{\"1\":{\"29\":1}}],[\"count\",{\"1\":{\"64\":1}}],[\"cout<<b\",{\"1\":{\"61\":1}}],[\"cout<<inv\",{\"1\":{\"48\":1}}],[\"cout\",{\"1\":{\"51\":2,\"62\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":2,\"78\":1}}],[\"continue\",{\"1\":{\"38\":1,\"81\":1}}],[\"contest\",{\"0\":{\"4\":1}}],[\"const\",{\"1\":{\"38\":1,\"39\":1}}],[\"collegiate\",{\"0\":{\"4\":1}}],[\"ccpc\",{\"0\":{\"4\":1}}],[\"待填\",{\"1\":{\"2\":1}}],[\"个人奖项\",{\"0\":{\"3\":1}}],[\"个人能力\",{\"0\":{\"2\":1}}],[\"个人介绍\",{\"0\":{\"1\":1}}],[\"博客主页\",{\"1\":{\"0\":1}}],[\"和\",{\"1\":{\"0\":1,\"21\":1,\"86\":1}}],[\"要使用此布局\",{\"1\":{\"0\":1}}]],\"version\":2}}")).map(([e,t])=>[e,jn(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:n,options:s,id:r}})=>{const o=An[n];e==="suggest"?self.postMessage([e,r,Et(t,o,s)]):e==="search"?self.postMessage([e,r,vt(t,o,s,"max")]):self.postMessage({suggestions:[e,r,Et(t,o,s)],results:[e,r,vt(t,o,s,__SLIMSEARCH_SORT_STRATEGY__)]})};
//# sourceMappingURL=index.js.map
